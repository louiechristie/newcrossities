# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

interface WpCommenter {
  "Identifies the primary key from the database."
  databaseId: Int!
  "The email address of the author of a comment."
  email: String
  "The globally unique identifier for the comment author."
  id: ID!
  "The name of the author of a comment."
  name: String
  "The url of the author of a comment."
  url: String
}

interface WpContentNode {
  children: [Node!]!
  "Connection between the ContentNode type and the ContentType type"
  contentType: WpContentNodeToContentTypeConnectionEdge
  "The ID of the node in the database."
  databaseId: Int!
  "Post publishing date."
  date(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The publishing date set in GMT."
  dateGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The desired slug of the post"
  desiredSlug: String
  "The RSS enclosure for the object"
  enclosure: String
  "The global unique identifier for this post. This currently matches the value stored in WP_Post->guid and the guid column in the \"post_objects\" database table."
  guid: String
  id: ID!
  internal: Internal!
  "The user that most recently edited the node"
  lastEditedBy: WpContentNodeToEditLastConnectionEdge
  "The permalink of the post"
  link: String
  "The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time."
  modified(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT."
  modifiedGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  nodeType: String
  parent: Node
  "The uri slug for the post. This is equivalent to the WP_Post->post_name field and the post_name column in the database for the \"post_objects\" table."
  slug: String
  "The current status of the object"
  status: String
  "The template assigned to a node of content"
  template: WpContentTemplate
  "URI path for the resource"
  uri: String!
}

interface WpContentTemplate {
  "The name of the template"
  templateName: String
}

interface WpDatabaseIdentifier {
  "The unique identifier stored in the database"
  databaseId: Int!
}

interface WpHierarchicalContentNode {
  "Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root)."
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection
  "Database id of the parent node"
  parentDatabaseId: Int
  "The globally unique identifier of the parent node."
  parentId: ID
  "Connection between the HierarchicalContentNode type and the ContentNode type"
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection
  "The parent of the node. The parent object can be of various types"
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge
}

interface WpHierarchicalTermNode {
  "Database id of the parent node"
  parentDatabaseId: Int
  "The globally unique identifier of the parent node."
  parentId: ID
}

interface WpMenuItemLinkable {
  "The unique resource identifier path"
  databaseId: Int!
  "The unique resource identifier path"
  id: ID!
  "The unique resource identifier path"
  uri: String!
}

interface WpNode {
  "The globally unique ID for the object"
  id: ID!
}

interface WpNodeWithAuthor {
  "Connection between the NodeWithAuthor type and the User type"
  author: WpNodeWithAuthorToUserConnectionEdge
  "The database identifier of the author of the node"
  authorDatabaseId: Int
  "The globally unique identifier of the author of the node"
  authorId: ID
}

interface WpNodeWithComments {
  "The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility."
  commentCount: Int
  "Whether the comments are open or closed for this particular post."
  commentStatus: String
}

interface WpNodeWithContentEditor {
  "The content of the post."
  content: String
}

interface WpNodeWithExcerpt {
  "The excerpt of the post."
  excerpt: String
}

interface WpNodeWithFeaturedImage {
  "Connection between the NodeWithFeaturedImage type and the MediaItem type"
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge
  "The database identifier for the featured image node assigned to the content node"
  featuredImageDatabaseId: Int
  "Globally unique ID of the featured image assigned to the node"
  featuredImageId: ID
}

interface WpNodeWithPageAttributes {
  "A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types."
  menuOrder: Int
}

interface WpNodeWithRevisions {
  "True if the node is a revision of another node"
  isRevision: Boolean
}

interface WpNodeWithTemplate {
  "The template assigned to the node"
  template: WpContentTemplate
}

interface WpNodeWithTitle {
  "The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made."
  title: String
}

interface WpNodeWithTrackbacks {
  "Whether the pings are open or closed for this particular post."
  pingStatus: String
  "URLs that have been pinged."
  pinged: [String]
  "URLs queued to be pinged."
  toPing: [String]
}

interface WpTermNode {
  children: [Node!]!
  "The number of objects connected to the object"
  count: Int
  "Identifies the primary key from the database."
  databaseId: Int!
  "The description of the object"
  description: String
  id: ID!
  internal: Internal!
  "The link to the term"
  link: String
  "The human friendly name of the object."
  name: String
  nodeType: String
  parent: Node
  "An alphanumeric identifier for the object unique to its type."
  slug: String
  "The ID of the term group that this term object belongs to"
  termGroupId: Int
  "The taxonomy ID that the object is associated with"
  termTaxonomyId: Int
  "The unique resource identifier path"
  uri: String!
}

interface WpUniformResourceIdentifiable {
  "The unique resource identifier path"
  id: ID!
  "The unique resource identifier path"
  uri: String
}

type Directory implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
  childImageSharp: ImageSharp
  children: [Node!]!
  "Returns all children nodes filtered by type ImageSharp"
  childrenImageSharp: [ImageSharp]
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  hash: String
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    jpegQuality: Int,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    pngQuality: Int,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = AUTO,
    toFormatBase64: ImageFormat = AUTO,
    traceSVG: Potrace,
    trim: Float = 0.0,
    webpQuality: Int
  ): ImageSharpFluid
  gatsbyImageData(
    """

    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float,
    "Options to pass to sharp when generating AVIF images."
    avifOptions: AVIFOptions,
    "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String,
    "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
    blurredOptions: BlurredOptions,
    """

    Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int],
    """

    The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [ImageFormat],
    """

    The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    matching the aspect ratio of the source image.
    """
    height: Int,
    "Options to pass to sharp when generating JPG images."
    jpgOptions: JPGOptions,
    """

    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: ImageLayout = CONSTRAINED,
    """

    A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    """
    outputPixelDensities: [Float],
    """

    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set "background" to use a fixed background color.
    """
    placeholder: ImagePlaceholder,
    "Options to pass to sharp when generating PNG images."
    pngOptions: PNGOptions,
    "The default quality. This is overridden by any format-specific options"
    quality: Int,
    """

    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download.
    You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    does not actually span the full width of the screen, in which case you should pass the correct size here.
    """
    sizes: String,
    "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
    tracedSVGOptions: Potrace,
    "Options to pass to sharp to control cropping and other image manipulations."
    transformOptions: TransformOptions,
    "Options to pass to sharp when generating WebP images."
    webpOptions: WebPOptions,
    """

    The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON!
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

type Query {
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
  allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
  allWp(filter: WpFilterInput, limit: Int, skip: Int, sort: WpSortInput): WpConnection!
  allWpCategory(filter: WpCategoryFilterInput, limit: Int, skip: Int, sort: WpCategorySortInput): WpCategoryConnection!
  allWpComment(filter: WpCommentFilterInput, limit: Int, skip: Int, sort: WpCommentSortInput): WpCommentConnection!
  allWpCommentAuthor(filter: WpCommentAuthorFilterInput, limit: Int, skip: Int, sort: WpCommentAuthorSortInput): WpCommentAuthorConnection!
  allWpContentNode(filter: WpContentNodeFilterInput, limit: Int, skip: Int, sort: WpContentNodeSortInput): WpContentNodeConnection!
  allWpContentType(filter: WpContentTypeFilterInput, limit: Int, skip: Int, sort: WpContentTypeSortInput): WpContentTypeConnection!
  allWpMediaItem(filter: WpMediaItemFilterInput, limit: Int, skip: Int, sort: WpMediaItemSortInput): WpMediaItemConnection!
  allWpMenu(filter: WpMenuFilterInput, limit: Int, skip: Int, sort: WpMenuSortInput): WpMenuConnection!
  allWpMenuItem(filter: WpMenuItemFilterInput, limit: Int, skip: Int, sort: WpMenuItemSortInput): WpMenuItemConnection!
  allWpPage(filter: WpPageFilterInput, limit: Int, skip: Int, sort: WpPageSortInput): WpPageConnection!
  allWpPost(filter: WpPostFilterInput, limit: Int, skip: Int, sort: WpPostSortInput): WpPostConnection!
  allWpPostFormat(filter: WpPostFormatFilterInput, limit: Int, skip: Int, sort: WpPostFormatSortInput): WpPostFormatConnection!
  allWpTag(filter: WpTagFilterInput, limit: Int, skip: Int, sort: WpTagSortInput): WpTagConnection!
  allWpTaxonomy(filter: WpTaxonomyFilterInput, limit: Int, skip: Int, sort: WpTaxonomySortInput): WpTaxonomyConnection!
  allWpTermNode(filter: WpTermNodeFilterInput, limit: Int, skip: Int, sort: WpTermNodeSortInput): WpTermNodeConnection!
  allWpUser(filter: WpUserFilterInput, limit: Int, skip: Int, sort: WpUserSortInput): WpUserConnection!
  allWpUserRole(filter: WpUserRoleFilterInput, limit: Int, skip: Int, sort: WpUserRoleSortInput): WpUserRoleConnection!
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, hash: StringQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
  siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
  wp(allSettings: WpSettingsFilterInput, children: NodeFilterListInput, discussionSettings: WpDiscussionSettingsFilterInput, generalSettings: WpGeneralSettingsFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, readingSettings: WpReadingSettingsFilterInput, schemaMd5: StringQueryOperatorInput, viewer: WpUserFilterInput, wpGatsby: WpWPGatsbyFilterInput, writingSettings: WpWritingSettingsFilterInput): Wp
  wpCategory(ancestors: WpCategoryToAncestorsCategoryConnectionFilterInput, children: NodeFilterListInput, contentNodes: WpCategoryToContentNodeConnectionFilterInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, posts: WpCategoryToPostConnectionFilterInput, slug: StringQueryOperatorInput, taxonomy: WpCategoryToTaxonomyConnectionEdgeFilterInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput, wpChildren: WpCategoryToCategoryConnectionFilterInput, wpParent: WpCategoryToParentCategoryConnectionEdgeFilterInput): WpCategory
  wpComment(agent: StringQueryOperatorInput, approved: BooleanQueryOperatorInput, author: WpCommentToCommenterConnectionEdgeFilterInput, authorIp: StringQueryOperatorInput, children: NodeFilterListInput, commentedOn: WpCommentToContentNodeConnectionEdgeFilterInput, content: StringQueryOperatorInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, karma: IntQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, replies: WpCommentToCommentConnectionFilterInput, type: StringQueryOperatorInput, wpParent: WpCommentToParentCommentConnectionEdgeFilterInput): WpComment
  wpCommentAuthor(children: NodeFilterListInput, databaseId: IntQueryOperatorInput, email: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, url: StringQueryOperatorInput): WpCommentAuthor
  wpContentNode(children: NodeFilterListInput, contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, status: StringQueryOperatorInput, template: WpContentTemplateFilterInput, uri: StringQueryOperatorInput): WpContentNode
  wpContentType(archivePath: StringQueryOperatorInput, canExport: BooleanQueryOperatorInput, children: NodeFilterListInput, connectedTaxonomies: WpContentTypeToTaxonomyConnectionFilterInput, contentNodes: WpContentTypeToContentNodeConnectionFilterInput, deleteWithUser: BooleanQueryOperatorInput, description: StringQueryOperatorInput, excludeFromSearch: BooleanQueryOperatorInput, graphqlPluralName: StringQueryOperatorInput, graphqlSingleName: StringQueryOperatorInput, hasArchive: BooleanQueryOperatorInput, hierarchical: BooleanQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, isFrontPage: BooleanQueryOperatorInput, isPostsPage: BooleanQueryOperatorInput, label: StringQueryOperatorInput, labels: WpPostTypeLabelDetailsFilterInput, menuIcon: StringQueryOperatorInput, menuPosition: IntQueryOperatorInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, public: BooleanQueryOperatorInput, publiclyQueryable: BooleanQueryOperatorInput, restBase: StringQueryOperatorInput, restControllerClass: StringQueryOperatorInput, showInAdminBar: BooleanQueryOperatorInput, showInGraphql: BooleanQueryOperatorInput, showInMenu: BooleanQueryOperatorInput, showInNavMenus: BooleanQueryOperatorInput, showInRest: BooleanQueryOperatorInput, showUi: BooleanQueryOperatorInput, uri: StringQueryOperatorInput): WpContentType
  wpMediaItem(altText: StringQueryOperatorInput, ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput, author: WpNodeWithAuthorToUserConnectionEdgeFilterInput, authorDatabaseId: IntQueryOperatorInput, authorId: IDQueryOperatorInput, caption: StringQueryOperatorInput, children: NodeFilterListInput, commentCount: IntQueryOperatorInput, commentStatus: StringQueryOperatorInput, comments: WpMediaItemToCommentConnectionFilterInput, contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, description: StringQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, fileSize: IntQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, localFile: FileFilterInput, mediaDetails: WpMediaDetailsFilterInput, mediaItemUrl: StringQueryOperatorInput, mediaType: StringQueryOperatorInput, mimeType: StringQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, remoteFile: FileFilterInput, sizes: StringQueryOperatorInput, slug: StringQueryOperatorInput, sourceUrl: StringQueryOperatorInput, srcSet: StringQueryOperatorInput, status: StringQueryOperatorInput, template: WpContentTemplateFilterInput, title: StringQueryOperatorInput, uri: StringQueryOperatorInput, wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput, wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput): WpMediaItem
  wpMenu(children: NodeFilterListInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, locations: WpMenuLocationEnumQueryOperatorInput, menuItems: WpMenuToMenuItemConnectionFilterInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput): WpMenu
  wpMenuItem(childItems: WpMenuItemToMenuItemConnectionFilterInput, children: NodeFilterListInput, connectedNode: WpMenuItemToMenuItemLinkableConnectionEdgeFilterInput, cssClasses: StringQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, linkRelationship: StringQueryOperatorInput, locations: WpMenuLocationEnumQueryOperatorInput, menu: WpMenuItemToMenuConnectionEdgeFilterInput, nodeType: StringQueryOperatorInput, order: IntQueryOperatorInput, parent: NodeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, path: StringQueryOperatorInput, target: StringQueryOperatorInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): WpMenuItem
  wpPage(ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput, author: WpNodeWithAuthorToUserConnectionEdgeFilterInput, authorDatabaseId: IntQueryOperatorInput, authorId: IDQueryOperatorInput, children: NodeFilterListInput, commentCount: IntQueryOperatorInput, commentStatus: StringQueryOperatorInput, comments: WpPageToCommentConnectionFilterInput, content: StringQueryOperatorInput, contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput, featuredImageDatabaseId: IntQueryOperatorInput, featuredImageId: IDQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, isFrontPage: BooleanQueryOperatorInput, isPostsPage: BooleanQueryOperatorInput, isPrivacyPage: BooleanQueryOperatorInput, isRevision: BooleanQueryOperatorInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, menuOrder: IntQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, parentDatabaseId: IntQueryOperatorInput, parentId: IDQueryOperatorInput, slug: StringQueryOperatorInput, status: StringQueryOperatorInput, template: WpContentTemplateFilterInput, title: StringQueryOperatorInput, uri: StringQueryOperatorInput, wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput, wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput): WpPage
  wpPost(author: WpNodeWithAuthorToUserConnectionEdgeFilterInput, authorDatabaseId: IntQueryOperatorInput, authorId: IDQueryOperatorInput, categories: WpPostToCategoryConnectionFilterInput, children: NodeFilterListInput, commentCount: IntQueryOperatorInput, commentStatus: StringQueryOperatorInput, comments: WpPostToCommentConnectionFilterInput, content: StringQueryOperatorInput, contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput, databaseId: IntQueryOperatorInput, date: DateQueryOperatorInput, dateGmt: DateQueryOperatorInput, desiredSlug: StringQueryOperatorInput, enclosure: StringQueryOperatorInput, excerpt: StringQueryOperatorInput, featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput, featuredImageDatabaseId: IntQueryOperatorInput, featuredImageId: IDQueryOperatorInput, guid: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, isRevision: BooleanQueryOperatorInput, isSticky: BooleanQueryOperatorInput, lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput, link: StringQueryOperatorInput, modified: DateQueryOperatorInput, modifiedGmt: DateQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, pingStatus: StringQueryOperatorInput, pinged: StringQueryOperatorInput, postFormats: WpPostToPostFormatConnectionFilterInput, slug: StringQueryOperatorInput, status: StringQueryOperatorInput, tags: WpPostToTagConnectionFilterInput, template: WpContentTemplateFilterInput, terms: WpPostToTermNodeConnectionFilterInput, title: StringQueryOperatorInput, toPing: StringQueryOperatorInput, uri: StringQueryOperatorInput): WpPost
  wpPostFormat(children: NodeFilterListInput, contentNodes: WpPostFormatToContentNodeConnectionFilterInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, posts: WpPostFormatToPostConnectionFilterInput, slug: StringQueryOperatorInput, taxonomy: WpPostFormatToTaxonomyConnectionEdgeFilterInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput): WpPostFormat
  wpTag(children: NodeFilterListInput, contentNodes: WpTagToContentNodeConnectionFilterInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, posts: WpTagToPostConnectionFilterInput, slug: StringQueryOperatorInput, taxonomy: WpTagToTaxonomyConnectionEdgeFilterInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput): WpTag
  wpTaxonomy(archivePath: StringQueryOperatorInput, children: NodeFilterListInput, connectedContentTypes: WpTaxonomyToContentTypeConnectionFilterInput, description: StringQueryOperatorInput, graphqlPluralName: StringQueryOperatorInput, graphqlSingleName: StringQueryOperatorInput, hierarchical: BooleanQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, public: BooleanQueryOperatorInput, restBase: StringQueryOperatorInput, restControllerClass: StringQueryOperatorInput, showCloud: BooleanQueryOperatorInput, showInAdminColumn: BooleanQueryOperatorInput, showInGraphql: BooleanQueryOperatorInput, showInMenu: BooleanQueryOperatorInput, showInNavMenus: BooleanQueryOperatorInput, showInQuickEdit: BooleanQueryOperatorInput, showInRest: BooleanQueryOperatorInput, showUi: BooleanQueryOperatorInput): WpTaxonomy
  wpTermNode(children: NodeFilterListInput, count: IntQueryOperatorInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, link: StringQueryOperatorInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput, slug: StringQueryOperatorInput, termGroupId: IntQueryOperatorInput, termTaxonomyId: IntQueryOperatorInput, uri: StringQueryOperatorInput): WpTermNode
  wpUser(avatar: WpAvatarFilterInput, capKey: StringQueryOperatorInput, capabilities: StringQueryOperatorInput, children: NodeFilterListInput, comments: WpUserToCommentConnectionFilterInput, databaseId: IntQueryOperatorInput, description: StringQueryOperatorInput, email: StringQueryOperatorInput, extraCapabilities: StringQueryOperatorInput, firstName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, lastName: StringQueryOperatorInput, locale: StringQueryOperatorInput, name: StringQueryOperatorInput, nicename: StringQueryOperatorInput, nickname: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, pages: WpUserToPageConnectionFilterInput, parent: NodeFilterInput, posts: WpUserToPostConnectionFilterInput, registeredDate: StringQueryOperatorInput, roles: WpUserToUserRoleConnectionFilterInput, slug: StringQueryOperatorInput, uri: StringQueryOperatorInput, url: StringQueryOperatorInput, username: StringQueryOperatorInput): WpUser
  wpUserRole(capabilities: StringQueryOperatorInput, children: NodeFilterListInput, displayName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeType: StringQueryOperatorInput, parent: NodeFilterInput): WpUserRole
}

type Site implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteGroupConnection {
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  componentPath: String
  context: SitePageContext
  id: ID!
  internal: Internal!
  internalComponentName: String!
  isCreatedByStatefulCreatePages: Boolean
  matchPath: String
  parent: Node
  path: String!
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePageContext {
  archivePath: String
  archiveType: String
  categoryDatabaseId: Int
  firstId: String
  id: String
  nextPage: String
  offset: Int
  pageNumber: Int
  perPage: Int
  previousPage: String
  totalPages: Int
  uri: String
  userDatabaseId: Int
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: SitePluginPackageJson
  parent: Node
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginPackageJson {
  dependencies: [SitePluginPackageJsonDependencies]
  description: String
  devDependencies: [SitePluginPackageJsonDevDependencies]
  keywords: [String]
  license: String
  main: String
  name: String
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  version: String
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SitePluginPluginOptions {
  allExtensions: Boolean
  base64Width: Int
  debug: SitePluginPluginOptionsDebug
  defaultQuality: Int
  develop: SitePluginPluginOptionsDevelop
  excludeFieldNames: [String]
  failOnError: Boolean
  html: SitePluginPluginOptionsHtml
  isTSX: Boolean
  jsxPragma: String
  name: String
  path: String
  pathCheck: Boolean
  stripMetadata: Boolean
  type: SitePluginPluginOptionsType
  url: String
  verbose: Boolean
}

type SitePluginPluginOptionsDebug {
  disableCompatibilityCheck: Boolean
  graphql: SitePluginPluginOptionsDebugGraphql
  preview: Boolean
  throwRefetchErrors: Boolean
  timeBuildSteps: Boolean
}

type SitePluginPluginOptionsDebugGraphql {
  copyNodeSourcingQueryAndExit: Boolean
  copyQueryOnError: Boolean
  onlyReportCriticalErrors: Boolean
  panicOnError: Boolean
  printIntrospectionDiff: Boolean
  showQueryOnError: Boolean
  showQueryVarsOnError: Boolean
  writeQueriesToDisk: Boolean
}

type SitePluginPluginOptionsDevelop {
  hardCacheData: Boolean
  hardCacheMediaFiles: Boolean
  nodeUpdateInterval: Int
}

type SitePluginPluginOptionsHtml {
  createStaticFiles: Boolean
  fallbackImageMaxWidth: Int
  imageQuality: Int
  useGatsbyImage: Boolean
}

type SitePluginPluginOptionsType {
  CoreParagraphBlockAttributesV2: SitePluginPluginOptionsTypeCoreParagraphBlockAttributesV2
  Post: SitePluginPluginOptionsTypePost
  RootQuery: String
}

type SitePluginPluginOptionsTypeCoreParagraphBlockAttributesV2 {
  exclude: Boolean
}

type SitePluginPluginOptionsTypePost {
  limit: Int
}

type SiteSiteMetadata {
  author: String
  description: String
  siteUrl: String
  title: String
}

"Non-node WPGraphQL root fields."
type Wp implements Node {
  "Entry point to get all settings for the site"
  allSettings: WpSettings
  children: [Node!]!
  discussionSettings: WpDiscussionSettings
  generalSettings: WpGeneralSettings
  id: ID!
  internal: Internal!
  nodeType: String
  parent: Node
  readingSettings: WpReadingSettings
  "Returns an MD5 hash of the schema, useful in determining if the schema has changed."
  schemaMd5: String
  "Returns the current user"
  viewer: WpUser
  "Information needed by gatsby-source-wordpress."
  wpGatsby: WpWPGatsby
  writingSettings: WpWritingSettings
}

"Avatars are profile images for users. WordPress by default uses the Gravatar service to host and fetch avatars from."
type WpAvatar {
  "URL for the default image or a default type. Accepts &#039;404&#039; (return a 404 instead of a default image), &#039;retro&#039; (8bit), &#039;monsterid&#039; (monster), &#039;wavatar&#039; (cartoon face), &#039;indenticon&#039; (the &#039;quilt&#039;), &#039;mystery&#039;, &#039;mm&#039;, or &#039;mysteryman&#039; (The Oyster Man), &#039;blank&#039; (transparent GIF), or &#039;gravatar_default&#039; (the Gravatar logo)."
  default: String
  "HTML attributes to insert in the IMG element. Is not sanitized."
  extraAttr: String
  "Whether to always show the default image, never the Gravatar."
  forceDefault: Boolean
  "Whether the avatar was successfully found."
  foundAvatar: Boolean
  "Height of the avatar image."
  height: Int
  imageFile: File
  "What rating to display avatars up to. Accepts &#039;G&#039;, &#039;PG&#039;, &#039;R&#039;, &#039;X&#039;, and are judged in that order."
  rating: String
  "Type of url scheme to use. Typically HTTP vs. HTTPS."
  scheme: String
  "The size of the avatar in pixels. A value of 96 will match a 96px x 96px gravatar image."
  size: Int
  "URL for the gravatar image source."
  url: String
  "Width of the avatar image."
  width: Int
}

"The category type"
type WpCategory implements Node & WpDatabaseIdentifier & WpHierarchicalTermNode & WpMenuItemLinkable & WpNode & WpTermNode & WpUniformResourceIdentifiable {
  "The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root)."
  ancestors: WpCategoryToAncestorsCategoryConnection
  children: [Node!]!
  "Connection between the category type and the ContentNode type"
  contentNodes: WpCategoryToContentNodeConnection
  "The number of objects connected to the object"
  count: Int
  "Identifies the primary key from the database."
  databaseId: Int!
  "The description of the object"
  description: String
  id: ID!
  internal: Internal!
  "The link to the term"
  link: String
  "The human friendly name of the object."
  name: String
  nodeType: String
  parent: Node
  "Database id of the parent node"
  parentDatabaseId: Int
  "The globally unique identifier of the parent node."
  parentId: ID
  "Connection between the category type and the post type"
  posts: WpCategoryToPostConnection
  "An alphanumeric identifier for the object unique to its type."
  slug: String
  "Connection between the category type and the Taxonomy type"
  taxonomy: WpCategoryToTaxonomyConnectionEdge
  "The ID of the term group that this term object belongs to"
  termGroupId: Int
  "The taxonomy ID that the object is associated with"
  termTaxonomyId: Int
  "The unique resource identifier path"
  uri: String!
  "Connection between the category type and the category type"
  wpChildren: WpCategoryToCategoryConnection
  "Connection between the category type and the category type"
  wpParent: WpCategoryToParentCategoryConnectionEdge
}

type WpCategoryConnection {
  distinct(field: WpCategoryFieldsEnum!): [String!]!
  edges: [WpCategoryEdge!]!
  group(field: WpCategoryFieldsEnum!, limit: Int, skip: Int): [WpCategoryGroupConnection!]!
  nodes: [WpCategory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpCategoryEdge {
  next: WpCategory
  node: WpCategory!
  previous: WpCategory
}

type WpCategoryGroupConnection {
  edges: [WpCategoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpCategory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the category type and the category type"
type WpCategoryToAncestorsCategoryConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpCategory]
}

"Connection between the category type and the category type"
type WpCategoryToCategoryConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpCategory]
}

"Connection between the category type and the ContentNode type"
type WpCategoryToContentNodeConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpContentNode]
}

"Connection between the category type and the category type"
type WpCategoryToParentCategoryConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpCategory
}

"Connection between the category type and the post type"
type WpCategoryToPostConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpPost]
}

"Connection between the category type and the Taxonomy type"
type WpCategoryToTaxonomyConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpTaxonomy
}

"A Comment object"
type WpComment implements Node & WpDatabaseIdentifier & WpNode {
  "User agent used to post the comment. This field is equivalent to WP_Comment-&gt;comment_agent and the value matching the &quot;comment_agent&quot; column in SQL."
  agent: String
  "The approval status of the comment. This field is equivalent to WP_Comment-&gt;comment_approved and the value matching the &quot;comment_approved&quot; column in SQL."
  approved: Boolean
  "The author of the comment"
  author: WpCommentToCommenterConnectionEdge
  "IP address for the author. This field is equivalent to WP_Comment-&gt;comment_author_IP and the value matching the &quot;comment_author_IP&quot; column in SQL."
  authorIp: String
  children: [Node!]!
  "Connection between the Comment type and the ContentNode type"
  commentedOn: WpCommentToContentNodeConnectionEdge
  "Content of the comment. This field is equivalent to WP_Comment-&gt;comment_content and the value matching the &quot;comment_content&quot; column in SQL."
  content: String
  "The unique identifier stored in the database"
  databaseId: Int!
  "Date the comment was posted in local time. This field is equivalent to WP_Comment-&gt;date and the value matching the &quot;date&quot; column in SQL."
  date(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "Date the comment was posted in GMT. This field is equivalent to WP_Comment-&gt;date_gmt and the value matching the &quot;date_gmt&quot; column in SQL."
  dateGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  id: ID!
  internal: Internal!
  "Karma value for the comment. This field is equivalent to WP_Comment-&gt;comment_karma and the value matching the &quot;comment_karma&quot; column in SQL."
  karma: Int
  nodeType: String
  parent: Node
  "The database id of the parent comment node or null if it is the root comment"
  parentDatabaseId: Int
  "The globally unique identifier of the parent comment node."
  parentId: ID
  "Connection between the Comment type and the Comment type"
  replies: WpCommentToCommentConnection
  "Type of comment. This field is equivalent to WP_Comment-&gt;comment_type and the value matching the &quot;comment_type&quot; column in SQL."
  type: String
  "Connection between the Comment type and the Comment type"
  wpParent: WpCommentToParentCommentConnectionEdge
}

"A Comment Author object"
type WpCommentAuthor implements Node & WpCommenter & WpNode {
  children: [Node!]!
  "Identifies the primary key from the database."
  databaseId: Int!
  "The email for the comment author"
  email: String
  id: ID!
  internal: Internal!
  "The name for the comment author."
  name: String
  nodeType: String
  parent: Node
  "The url the comment author."
  url: String
}

type WpCommentAuthorConnection {
  distinct(field: WpCommentAuthorFieldsEnum!): [String!]!
  edges: [WpCommentAuthorEdge!]!
  group(field: WpCommentAuthorFieldsEnum!, limit: Int, skip: Int): [WpCommentAuthorGroupConnection!]!
  nodes: [WpCommentAuthor!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpCommentAuthorEdge {
  next: WpCommentAuthor
  node: WpCommentAuthor!
  previous: WpCommentAuthor
}

type WpCommentAuthorGroupConnection {
  edges: [WpCommentAuthorEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpCommentAuthor!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpCommentConnection {
  distinct(field: WpCommentFieldsEnum!): [String!]!
  edges: [WpCommentEdge!]!
  group(field: WpCommentFieldsEnum!, limit: Int, skip: Int): [WpCommentGroupConnection!]!
  nodes: [WpComment!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpCommentEdge {
  next: WpComment
  node: WpComment!
  previous: WpComment
}

type WpCommentGroupConnection {
  edges: [WpCommentEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpComment!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the Comment type and the Comment type"
type WpCommentToCommentConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpComment]
}

"Connection between the Comment type and the Commenter type"
type WpCommentToCommenterConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpCommenter
}

"Connection between the Comment type and the ContentNode type"
type WpCommentToContentNodeConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpContentNode
}

"Connection between the Comment type and the Comment type"
type WpCommentToParentCommentConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpComment
}

type WpConnection {
  distinct(field: WpFieldsEnum!): [String!]!
  edges: [WpEdge!]!
  group(field: WpFieldsEnum!, limit: Int, skip: Int): [WpGroupConnection!]!
  nodes: [Wp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpContentNodeConnection {
  distinct(field: WpContentNodeFieldsEnum!): [String!]!
  edges: [WpContentNodeEdge!]!
  group(field: WpContentNodeFieldsEnum!, limit: Int, skip: Int): [WpContentNodeGroupConnection!]!
  nodes: [WpContentNode!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpContentNodeEdge {
  next: WpContentNode
  node: WpContentNode!
  previous: WpContentNode
}

type WpContentNodeGroupConnection {
  edges: [WpContentNodeEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpContentNode!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the ContentNode type and the ContentType type"
type WpContentNodeToContentTypeConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpContentType
}

"Connection between the ContentNode type and the User type"
type WpContentNodeToEditLastConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpUser
}

"Connection between the ContentNode type and the User type"
type WpContentNodeToEditLockConnectionEdge {
  "The timestamp for when the node was last edited"
  lockTimestamp: String
  "The nodes of the connection, without the edges"
  node: WpUser
}

"An Post Type object"
type WpContentType implements Node & WpNode & WpUniformResourceIdentifiable {
  "The url path of the first page of the archive page for this content type."
  archivePath: String
  "Whether this content type should can be exported."
  canExport: Boolean
  children: [Node!]!
  "Connection between the ContentType type and the Taxonomy type"
  connectedTaxonomies: WpContentTypeToTaxonomyConnection
  "Connection between the ContentType type and the ContentNode type"
  contentNodes: WpContentTypeToContentNodeConnection
  "Whether content of this type should be deleted when the author of it is deleted from the system."
  deleteWithUser: Boolean
  "Description of the content type."
  description: String
  "Whether to exclude nodes of this content type from front end search results."
  excludeFromSearch: Boolean
  "The plural name of the content type within the GraphQL Schema."
  graphqlPluralName: String
  "The singular name of the content type within the GraphQL Schema."
  graphqlSingleName: String
  "Whether this content type should have archives. Content archives are generated by type and by date."
  hasArchive: Boolean
  "Whether the content type is hierarchical, for example pages."
  hierarchical: Boolean
  id: ID!
  internal: Internal!
  "Whether this page is set to the static front page."
  isFrontPage: Boolean!
  "Whether this page is set to the blog posts page."
  isPostsPage: Boolean!
  "Display name of the content type."
  label: String
  "Details about the content type labels."
  labels: WpPostTypeLabelDetails
  "The name of the icon file to display as a menu icon."
  menuIcon: String
  "The position of this post type in the menu. Only applies if show_in_menu is true."
  menuPosition: Int
  "The internal name of the post type. This should not be used for display purposes."
  name: String
  nodeType: String
  parent: Node
  "Whether a content type is intended for use publicly either via the admin interface or by front-end users. While the default settings of exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are inherited from public, each does not rely on this relationship and controls a very specific intention."
  public: Boolean
  "Whether queries can be performed on the front end for the content type as part of parse_request()."
  publiclyQueryable: Boolean
  "Name of content type to display in REST API &quot;wp/v2&quot; namespace."
  restBase: String
  "The REST Controller class assigned to handling this content type."
  restControllerClass: String
  "Makes this content type available via the admin bar."
  showInAdminBar: Boolean
  "Whether to add the content type to the GraphQL Schema."
  showInGraphql: Boolean
  "Where to show the content type in the admin menu. To work, $show_ui must be true. If true, the post type is shown in its own top level menu. If false, no menu is shown. If a string of an existing top level menu (eg. &quot;tools.php&quot; or &quot;edit.php?post_type=page&quot;), the post type will be placed as a sub-menu of that."
  showInMenu: Boolean
  "Makes this content type available for selection in navigation menus."
  showInNavMenus: Boolean
  "Whether the content type is associated with a route under the the REST API &quot;wp/v2&quot; namespace."
  showInRest: Boolean
  "Whether to generate and allow a UI for managing this content type in the admin."
  showUi: Boolean
  "The unique resource identifier path"
  uri: String
}

type WpContentTypeConnection {
  distinct(field: WpContentTypeFieldsEnum!): [String!]!
  edges: [WpContentTypeEdge!]!
  group(field: WpContentTypeFieldsEnum!, limit: Int, skip: Int): [WpContentTypeGroupConnection!]!
  nodes: [WpContentType!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpContentTypeEdge {
  next: WpContentType
  node: WpContentType!
  previous: WpContentType
}

type WpContentTypeGroupConnection {
  edges: [WpContentTypeEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpContentType!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the ContentType type and the ContentNode type"
type WpContentTypeToContentNodeConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpContentNode]
}

"Connection between the ContentType type and the Taxonomy type"
type WpContentTypeToTaxonomyConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpTaxonomy]
}

"The template assigned to the node"
type WpCoverTemplate implements WpContentTemplate {
  "The name of the template"
  templateName: String
}

"The template assigned to the node"
type WpDefaultTemplate implements WpContentTemplate {
  "The name of the template"
  templateName: String
}

"The discussion setting type"
type WpDiscussionSettings {
  "Allow people to submit comments on new posts."
  defaultCommentStatus: String
  "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles."
  defaultPingStatus: String
}

type WpEdge {
  next: Wp
  node: Wp!
  previous: Wp
}

"The template assigned to the node"
type WpFullWidthTemplate implements WpContentTemplate {
  "The name of the template"
  templateName: String
}

"The general setting type"
type WpGeneralSettings {
  "A date format for all date strings."
  dateFormat: String
  "Site tagline."
  description: String
  "This address is used for admin purposes, like new user notification."
  email: String
  "WordPress locale code."
  language: String
  "A day number of the week that the week should start on."
  startOfWeek: Int
  "A time format for all time strings."
  timeFormat: String
  "A city in the same timezone as you."
  timezone: String
  "Site title."
  title: String
  "Site URL."
  url: String
}

type WpGroupConnection {
  edges: [WpEdge!]!
  field: String!
  fieldValue: String
  nodes: [Wp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the HierarchicalContentNode type and the ContentNode type"
type WpHierarchicalContentNodeToContentNodeAncestorsConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpContentNode]
}

"Connection between the HierarchicalContentNode type and the ContentNode type"
type WpHierarchicalContentNodeToContentNodeChildrenConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpContentNode]
}

"Connection between the HierarchicalContentNode type and the ContentNode type"
type WpHierarchicalContentNodeToParentContentNodeConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpContentNode
}

"File details for a Media Item"
type WpMediaDetails {
  "The filename of the mediaItem"
  file: String
  "The height of the mediaItem"
  height: Int
  "Meta information associated with the mediaItem"
  meta: WpMediaItemMeta
  "The available sizes of the mediaItem"
  sizes: [WpMediaSize]
  "The width of the mediaItem"
  width: Int
}

"The mediaItem type"
type WpMediaItem implements Node & WpContentNode & WpDatabaseIdentifier & WpHierarchicalContentNode & WpNode & WpNodeWithAuthor & WpNodeWithComments & WpNodeWithTemplate & WpNodeWithTitle & WpUniformResourceIdentifiable {
  "Alternative text to display when resource is not displayed"
  altText: String
  "Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root)."
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection
  "Connection between the NodeWithAuthor type and the User type"
  author: WpNodeWithAuthorToUserConnectionEdge
  "The database identifier of the author of the node"
  authorDatabaseId: Int
  "The globally unique identifier of the author of the node"
  authorId: ID
  "The caption for the resource"
  caption: String
  children: [Node!]!
  "The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility."
  commentCount: Int
  "Whether the comments are open or closed for this particular post."
  commentStatus: String
  "Connection between the mediaItem type and the Comment type"
  comments: WpMediaItemToCommentConnection
  "Connection between the ContentNode type and the ContentType type"
  contentType: WpContentNodeToContentTypeConnectionEdge
  "The ID of the node in the database."
  databaseId: Int!
  "Post publishing date."
  date(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The publishing date set in GMT."
  dateGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "Description of the image (stored as post_content)"
  description: String
  "The desired slug of the post"
  desiredSlug: String
  "The RSS enclosure for the object"
  enclosure: String
  "The filesize in bytes of the resource"
  fileSize: Int
  "The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table."
  guid: String
  id: ID!
  internal: Internal!
  "The user that most recently edited the node"
  lastEditedBy: WpContentNodeToEditLastConnectionEdge
  "The permalink of the post"
  link: String
  localFile: File
  "Details about the mediaItem"
  mediaDetails: WpMediaDetails
  "Url of the mediaItem"
  mediaItemUrl: String
  "Type of resource"
  mediaType: String
  "The mime type of the mediaItem"
  mimeType: String
  "The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time."
  modified(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT."
  modifiedGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  nodeType: String
  parent: Node
  "Database id of the parent node"
  parentDatabaseId: Int
  "The globally unique identifier of the parent node."
  parentId: ID
  remoteFile: File @deprecated(reason : "MediaItem.remoteFile was renamed to localFile")
  "The sizes attribute value for an image."
  sizes: String
  "The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table."
  slug: String
  "Url of the mediaItem"
  sourceUrl: String
  "The srcset attribute specifies the URL of the image to use in different situations. It is a comma separated string of urls and their widths."
  srcSet: String
  "The current status of the object"
  status: String
  "The template assigned to a node of content"
  template: WpContentTemplate
  "The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made."
  title: String
  "URI path for the resource"
  uri: String!
  "Connection between the HierarchicalContentNode type and the ContentNode type"
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection
  "The parent of the node. The parent object can be of various types"
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge
}

type WpMediaItemConnection {
  distinct(field: WpMediaItemFieldsEnum!): [String!]!
  edges: [WpMediaItemEdge!]!
  group(field: WpMediaItemFieldsEnum!, limit: Int, skip: Int): [WpMediaItemGroupConnection!]!
  nodes: [WpMediaItem!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpMediaItemEdge {
  next: WpMediaItem
  node: WpMediaItem!
  previous: WpMediaItem
}

type WpMediaItemGroupConnection {
  edges: [WpMediaItemEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpMediaItem!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Meta connected to a MediaItem"
type WpMediaItemMeta {
  "Aperture measurement of the media item."
  aperture: Float
  "Information about the camera used to create the media item."
  camera: String
  "The text string description associated with the media item."
  caption: String
  "Copyright information associated with the media item."
  copyright: String
  "The date/time when the media was created."
  createdTimestamp: Int
  "The original creator of the media item."
  credit: String
  "The focal length value of the media item."
  focalLength: Float
  "The ISO (International Organization for Standardization) value of the media item."
  iso: Int
  "List of keywords used to describe or identfy the media item."
  keywords: [String]
  "The vertical or horizontal aspect of the media item."
  orientation: String
  "The shutter speed information of the media item."
  shutterSpeed: Float
  "A useful title for the media item."
  title: String
}

"Connection between the mediaItem type and the Comment type"
type WpMediaItemToCommentConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpComment]
}

"Details of an available size for a media item"
type WpMediaSize {
  "The filename of the referenced size"
  file: String
  "The filesize of the resource"
  fileSize: Int
  "The height of the referenced size"
  height: String
  "The mime type of the referenced size"
  mimeType: String
  "The referenced size name"
  name: String
  "The url of the referenced size"
  sourceUrl: String
  "The width of the referenced size"
  width: String
}

"Menus are the containers for navigation items. Menus can be assigned to menu locations, which are typically registered by the active theme."
type WpMenu implements Node & WpDatabaseIdentifier & WpNode {
  children: [Node!]!
  "The number of items in the menu"
  count: Int
  "The unique identifier stored in the database"
  databaseId: Int!
  id: ID!
  internal: Internal!
  "The locations a menu is assigned to"
  locations: [WpMenuLocationEnum]
  "Connection between the Menu type and the MenuItem type"
  menuItems: WpMenuToMenuItemConnection
  "Display name of the menu. Equivalent to WP_Term-&gt;name."
  name: String
  nodeType: String
  parent: Node
  "The url friendly name of the menu. Equivalent to WP_Term-&gt;slug"
  slug: String
}

type WpMenuConnection {
  distinct(field: WpMenuFieldsEnum!): [String!]!
  edges: [WpMenuEdge!]!
  group(field: WpMenuFieldsEnum!, limit: Int, skip: Int): [WpMenuGroupConnection!]!
  nodes: [WpMenu!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpMenuEdge {
  next: WpMenu
  node: WpMenu!
  previous: WpMenu
}

type WpMenuGroupConnection {
  edges: [WpMenuEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpMenu!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Navigation menu items are the individual items assigned to a menu. These are rendered as the links in a navigation menu."
type WpMenuItem implements Node & WpDatabaseIdentifier & WpNode {
  "Connection between the MenuItem type and the MenuItem type"
  childItems: WpMenuItemToMenuItemConnection
  children: [Node!]!
  "Connection from MenuItem to it&#039;s connected node"
  connectedNode: WpMenuItemToMenuItemLinkableConnectionEdge
  "Class attribute for the menu item link"
  cssClasses: [String]
  "The unique identifier stored in the database"
  databaseId: Int!
  "Description of the menu item."
  description: String
  id: ID!
  internal: Internal!
  "Label or title of the menu item."
  label: String
  "Link relationship (XFN) of the menu item."
  linkRelationship: String
  "The locations the menu item&#039;s Menu is assigned to"
  locations: [WpMenuLocationEnum]
  "The Menu a MenuItem is part of"
  menu: WpMenuItemToMenuConnectionEdge
  nodeType: String
  "Menu item order"
  order: Int
  parent: Node
  "The database id of the parent menu item or null if it is the root"
  parentDatabaseId: Int
  "The globally unique identifier of the parent nav menu item object."
  parentId: ID
  "Path for the resource. Relative path for internal resources. Absolute path for external resources."
  path: String!
  "Target attribute for the menu item link."
  target: String
  "Title attribute for the menu item link"
  title: String
  "URL or destination of the menu item."
  url: String
}

type WpMenuItemConnection {
  distinct(field: WpMenuItemFieldsEnum!): [String!]!
  edges: [WpMenuItemEdge!]!
  group(field: WpMenuItemFieldsEnum!, limit: Int, skip: Int): [WpMenuItemGroupConnection!]!
  nodes: [WpMenuItem!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpMenuItemEdge {
  next: WpMenuItem
  node: WpMenuItem!
  previous: WpMenuItem
}

type WpMenuItemGroupConnection {
  edges: [WpMenuItemEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpMenuItem!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the MenuItem type and the Menu type"
type WpMenuItemToMenuConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpMenu
}

"Connection between the MenuItem type and the MenuItem type"
type WpMenuItemToMenuItemConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpMenuItem]
}

"Connection between the MenuItem type and the MenuItemLinkable type"
type WpMenuItemToMenuItemLinkableConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpMenuItemLinkable
}

"Connection between the Menu type and the MenuItem type"
type WpMenuToMenuItemConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpMenuItem]
}

"Connection between the NodeWithAuthor type and the User type"
type WpNodeWithAuthorToUserConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpUser
}

"Connection between the NodeWithFeaturedImage type and the MediaItem type"
type WpNodeWithFeaturedImageToMediaItemConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpMediaItem
}

"Connection between the NodeWithRevisions type and the ContentNode type"
type WpNodeWithRevisionsToContentNodeConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpContentNode
}

"The page type"
type WpPage implements Node & WpContentNode & WpDatabaseIdentifier & WpHierarchicalContentNode & WpMenuItemLinkable & WpNode & WpNodeWithAuthor & WpNodeWithComments & WpNodeWithContentEditor & WpNodeWithFeaturedImage & WpNodeWithPageAttributes & WpNodeWithRevisions & WpNodeWithTemplate & WpNodeWithTitle & WpUniformResourceIdentifiable {
  "Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root)."
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection
  "Connection between the NodeWithAuthor type and the User type"
  author: WpNodeWithAuthorToUserConnectionEdge
  "The database identifier of the author of the node"
  authorDatabaseId: Int
  "The globally unique identifier of the author of the node"
  authorId: ID
  children: [Node!]!
  "The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility."
  commentCount: Int
  "Whether the comments are open or closed for this particular post."
  commentStatus: String
  "Connection between the page type and the Comment type"
  comments: WpPageToCommentConnection
  "The content of the post."
  content: String
  "Connection between the ContentNode type and the ContentType type"
  contentType: WpContentNodeToContentTypeConnectionEdge
  "The ID of the node in the database."
  databaseId: Int!
  "Post publishing date."
  date(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The publishing date set in GMT."
  dateGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The desired slug of the post"
  desiredSlug: String
  "The RSS enclosure for the object"
  enclosure: String
  "Connection between the NodeWithFeaturedImage type and the MediaItem type"
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge
  "The database identifier for the featured image node assigned to the content node"
  featuredImageDatabaseId: Int
  "Globally unique ID of the featured image assigned to the node"
  featuredImageId: ID
  "The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table."
  guid: String
  id: ID!
  internal: Internal!
  "Whether this page is set to the static front page."
  isFrontPage: Boolean!
  "Whether this page is set to the blog posts page."
  isPostsPage: Boolean!
  "Whether this page is set to the privacy page."
  isPrivacyPage: Boolean!
  "True if the node is a revision of another node"
  isRevision: Boolean
  "The user that most recently edited the node"
  lastEditedBy: WpContentNodeToEditLastConnectionEdge
  "The permalink of the post"
  link: String
  "A field used for ordering posts. This is typically used with nav menu items or for special ordering of hierarchical content types."
  menuOrder: Int
  "The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time."
  modified(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT."
  modifiedGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  nodeType: String
  parent: Node
  "Database id of the parent node"
  parentDatabaseId: Int
  "The globally unique identifier of the parent node."
  parentId: ID
  "The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table."
  slug: String
  "The current status of the object"
  status: String
  "The template assigned to a node of content"
  template: WpContentTemplate
  "The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made."
  title: String
  "URI path for the resource"
  uri: String!
  "Connection between the HierarchicalContentNode type and the ContentNode type"
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection
  "The parent of the node. The parent object can be of various types"
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge
}

type WpPageConnection {
  distinct(field: WpPageFieldsEnum!): [String!]!
  edges: [WpPageEdge!]!
  group(field: WpPageFieldsEnum!, limit: Int, skip: Int): [WpPageGroupConnection!]!
  nodes: [WpPage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpPageEdge {
  next: WpPage
  node: WpPage!
  previous: WpPage
}

type WpPageGroupConnection {
  edges: [WpPageEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpPage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the page type and the Comment type"
type WpPageToCommentConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpComment]
}

"The post type"
type WpPost implements Node & WpContentNode & WpDatabaseIdentifier & WpMenuItemLinkable & WpNode & WpNodeWithAuthor & WpNodeWithComments & WpNodeWithContentEditor & WpNodeWithExcerpt & WpNodeWithFeaturedImage & WpNodeWithRevisions & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithTrackbacks & WpUniformResourceIdentifiable {
  "Connection between the NodeWithAuthor type and the User type"
  author: WpNodeWithAuthorToUserConnectionEdge
  "The database identifier of the author of the node"
  authorDatabaseId: Int
  "The globally unique identifier of the author of the node"
  authorId: ID
  "Connection between the post type and the category type"
  categories: WpPostToCategoryConnection
  children: [Node!]!
  "The number of comments. Even though WPGraphQL denotes this field as an integer, in WordPress this field should be saved as a numeric string for compatibility."
  commentCount: Int
  "Whether the comments are open or closed for this particular post."
  commentStatus: String
  "Connection between the post type and the Comment type"
  comments: WpPostToCommentConnection
  "The content of the post."
  content: String
  "Connection between the ContentNode type and the ContentType type"
  contentType: WpContentNodeToContentTypeConnectionEdge
  "The ID of the node in the database."
  databaseId: Int!
  "Post publishing date."
  date(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The publishing date set in GMT."
  dateGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The desired slug of the post"
  desiredSlug: String
  "The RSS enclosure for the object"
  enclosure: String
  "The excerpt of the post."
  excerpt: String
  "Connection between the NodeWithFeaturedImage type and the MediaItem type"
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge
  "The database identifier for the featured image node assigned to the content node"
  featuredImageDatabaseId: Int
  "Globally unique ID of the featured image assigned to the node"
  featuredImageId: ID
  "The global unique identifier for this post. This currently matches the value stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot; database table."
  guid: String
  id: ID!
  internal: Internal!
  "True if the node is a revision of another node"
  isRevision: Boolean
  "Whether this page is sticky"
  isSticky: Boolean!
  "The user that most recently edited the node"
  lastEditedBy: WpContentNodeToEditLastConnectionEdge
  "The permalink of the post"
  link: String
  "The local modified time for a post. If a post was recently updated the modified field will change to match the corresponding time."
  modified(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  "The GMT modified time for a post. If a post was recently updated the modified field will change to match the corresponding time in GMT."
  modifiedGmt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  nodeType: String
  parent: Node
  "Whether the pings are open or closed for this particular post."
  pingStatus: String
  "URLs that have been pinged."
  pinged: [String]
  "Connection between the post type and the postFormat type"
  postFormats: WpPostToPostFormatConnection
  "The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name field and the post_name column in the database for the &quot;post_objects&quot; table."
  slug: String
  "The current status of the object"
  status: String
  "Connection between the post type and the tag type"
  tags: WpPostToTagConnection
  "The template assigned to a node of content"
  template: WpContentTemplate
  "Connection between the post type and the TermNode type"
  terms: WpPostToTermNodeConnection
  "The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made."
  title: String
  "URLs queued to be pinged."
  toPing: [String]
  "URI path for the resource"
  uri: String!
}

type WpPostConnection {
  distinct(field: WpPostFieldsEnum!): [String!]!
  edges: [WpPostEdge!]!
  group(field: WpPostFieldsEnum!, limit: Int, skip: Int): [WpPostGroupConnection!]!
  nodes: [WpPost!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpPostEdge {
  next: WpPost
  node: WpPost!
  previous: WpPost
}

"The postFormat type"
type WpPostFormat implements Node & WpDatabaseIdentifier & WpNode & WpTermNode & WpUniformResourceIdentifiable {
  children: [Node!]!
  "Connection between the postFormat type and the ContentNode type"
  contentNodes: WpPostFormatToContentNodeConnection
  "The number of objects connected to the object"
  count: Int
  "Identifies the primary key from the database."
  databaseId: Int!
  "The description of the object"
  description: String
  id: ID!
  internal: Internal!
  "The link to the term"
  link: String
  "The human friendly name of the object."
  name: String
  nodeType: String
  parent: Node
  "Connection between the postFormat type and the post type"
  posts: WpPostFormatToPostConnection
  "An alphanumeric identifier for the object unique to its type."
  slug: String
  "Connection between the postFormat type and the Taxonomy type"
  taxonomy: WpPostFormatToTaxonomyConnectionEdge
  "The ID of the term group that this term object belongs to"
  termGroupId: Int
  "The taxonomy ID that the object is associated with"
  termTaxonomyId: Int
  "The unique resource identifier path"
  uri: String!
}

type WpPostFormatConnection {
  distinct(field: WpPostFormatFieldsEnum!): [String!]!
  edges: [WpPostFormatEdge!]!
  group(field: WpPostFormatFieldsEnum!, limit: Int, skip: Int): [WpPostFormatGroupConnection!]!
  nodes: [WpPostFormat!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpPostFormatEdge {
  next: WpPostFormat
  node: WpPostFormat!
  previous: WpPostFormat
}

type WpPostFormatGroupConnection {
  edges: [WpPostFormatEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpPostFormat!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the postFormat type and the ContentNode type"
type WpPostFormatToContentNodeConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpContentNode]
}

"Connection between the postFormat type and the post type"
type WpPostFormatToPostConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpPost]
}

"Connection between the postFormat type and the Taxonomy type"
type WpPostFormatToTaxonomyConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpTaxonomy
}

type WpPostGroupConnection {
  edges: [WpPostEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpPost!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the post type and the category type"
type WpPostToCategoryConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpCategory]
}

"Connection between the post type and the Comment type"
type WpPostToCommentConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpComment]
}

"Connection between the post type and the postFormat type"
type WpPostToPostFormatConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpPostFormat]
}

"Connection between the post type and the tag type"
type WpPostToTagConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpTag]
}

"Connection between the post type and the TermNode type"
type WpPostToTermNodeConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpTermNode]
}

"Details for labels of the PostType"
type WpPostTypeLabelDetails {
  "Default is ‘Add New’ for both hierarchical and non-hierarchical types."
  addNew: String
  "Label for adding a new singular item."
  addNewItem: String
  "Label to signify all items in a submenu link."
  allItems: String
  "Label for archives in nav menus"
  archives: String
  "Label for the attributes meta box."
  attributes: String
  "Label for editing a singular item."
  editItem: String
  "Label for the Featured Image meta box title."
  featuredImage: String
  "Label for the table views hidden heading."
  filterItemsList: String
  "Label for the media frame button."
  insertIntoItem: String
  "Label for the table hidden heading."
  itemsList: String
  "Label for the table pagination hidden heading."
  itemsListNavigation: String
  "Label for the menu name."
  menuName: String
  "General name for the post type, usually plural."
  name: String
  "Label for the new item page title."
  newItem: String
  "Label used when no items are found."
  notFound: String
  "Label used when no items are in the trash."
  notFoundInTrash: String
  "Label used to prefix parents of hierarchical items."
  parentItemColon: String
  "Label for removing the featured image."
  removeFeaturedImage: String
  "Label for searching plural items."
  searchItems: String
  "Label for setting the featured image."
  setFeaturedImage: String
  "Name for one object of this post type."
  singularName: String
  "Label for the media frame filter."
  uploadedToThisItem: String
  "Label in the media frame for using a featured image."
  useFeaturedImage: String
  "Label for viewing a singular item."
  viewItem: String
  "Label for viewing post type archives."
  viewItems: String
}

"The reading setting type"
type WpReadingSettings {
  "Blog pages show at most."
  postsPerPage: Int
}

"All of the registered settings"
type WpSettings {
  "Allow people to submit comments on new posts."
  discussionSettingsDefaultCommentStatus: String
  "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles."
  discussionSettingsDefaultPingStatus: String
  "A date format for all date strings."
  generalSettingsDateFormat: String
  "Site tagline."
  generalSettingsDescription: String
  "This address is used for admin purposes, like new user notification."
  generalSettingsEmail: String
  "WordPress locale code."
  generalSettingsLanguage: String
  "A day number of the week that the week should start on."
  generalSettingsStartOfWeek: Int
  "A time format for all time strings."
  generalSettingsTimeFormat: String
  "A city in the same timezone as you."
  generalSettingsTimezone: String
  "Site title."
  generalSettingsTitle: String
  "Site URL."
  generalSettingsUrl: String
  "Blog pages show at most."
  readingSettingsPostsPerPage: Int
  "Default post category."
  writingSettingsDefaultCategory: Int
  "Default post format."
  writingSettingsDefaultPostFormat: String
  "Convert emoticons like :-) and :-P to graphics on display."
  writingSettingsUseSmilies: Boolean
}

"The tag type"
type WpTag implements Node & WpDatabaseIdentifier & WpMenuItemLinkable & WpNode & WpTermNode & WpUniformResourceIdentifiable {
  children: [Node!]!
  "Connection between the tag type and the ContentNode type"
  contentNodes: WpTagToContentNodeConnection
  "The number of objects connected to the object"
  count: Int
  "Identifies the primary key from the database."
  databaseId: Int!
  "The description of the object"
  description: String
  id: ID!
  internal: Internal!
  "The link to the term"
  link: String
  "The human friendly name of the object."
  name: String
  nodeType: String
  parent: Node
  "Connection between the tag type and the post type"
  posts: WpTagToPostConnection
  "An alphanumeric identifier for the object unique to its type."
  slug: String
  "Connection between the tag type and the Taxonomy type"
  taxonomy: WpTagToTaxonomyConnectionEdge
  "The ID of the term group that this term object belongs to"
  termGroupId: Int
  "The taxonomy ID that the object is associated with"
  termTaxonomyId: Int
  "The unique resource identifier path"
  uri: String!
}

type WpTagConnection {
  distinct(field: WpTagFieldsEnum!): [String!]!
  edges: [WpTagEdge!]!
  group(field: WpTagFieldsEnum!, limit: Int, skip: Int): [WpTagGroupConnection!]!
  nodes: [WpTag!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpTagEdge {
  next: WpTag
  node: WpTag!
  previous: WpTag
}

type WpTagGroupConnection {
  edges: [WpTagEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpTag!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the tag type and the ContentNode type"
type WpTagToContentNodeConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpContentNode]
}

"Connection between the tag type and the post type"
type WpTagToPostConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpPost]
}

"Connection between the tag type and the Taxonomy type"
type WpTagToTaxonomyConnectionEdge {
  "The nodes of the connection, without the edges"
  node: WpTaxonomy
}

"A taxonomy object"
type WpTaxonomy implements Node & WpNode {
  "The url path of the first page of the archive page for this content type."
  archivePath: String
  children: [Node!]!
  "List of Content Types associated with the Taxonomy"
  connectedContentTypes: WpTaxonomyToContentTypeConnection
  "Description of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;description"
  description: String
  "The plural name of the post type within the GraphQL Schema."
  graphqlPluralName: String
  "The singular name of the post type within the GraphQL Schema."
  graphqlSingleName: String
  "Whether the taxonomy is hierarchical"
  hierarchical: Boolean
  id: ID!
  internal: Internal!
  "Name of the taxonomy shown in the menu. Usually plural."
  label: String
  "The display name of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;label"
  name: String
  nodeType: String
  parent: Node
  "Whether the taxonomy is publicly queryable"
  public: Boolean
  "Name of content type to diplay in REST API &quot;wp/v2&quot; namespace."
  restBase: String
  "The REST Controller class assigned to handling this content type."
  restControllerClass: String
  "Whether to show the taxonomy as part of a tag cloud widget. This field is equivalent to WP_Taxonomy-&gt;show_tagcloud"
  showCloud: Boolean
  "Whether to display a column for the taxonomy on its post type listing screens."
  showInAdminColumn: Boolean
  "Whether to add the post type to the GraphQL Schema."
  showInGraphql: Boolean
  "Whether to show the taxonomy in the admin menu"
  showInMenu: Boolean
  "Whether the taxonomy is available for selection in navigation menus."
  showInNavMenus: Boolean
  "Whether to show the taxonomy in the quick/bulk edit panel."
  showInQuickEdit: Boolean
  "Whether to add the post type route in the REST API &quot;wp/v2&quot; namespace."
  showInRest: Boolean
  "Whether to generate and allow a UI for managing terms in this taxonomy in the admin"
  showUi: Boolean
}

type WpTaxonomyConnection {
  distinct(field: WpTaxonomyFieldsEnum!): [String!]!
  edges: [WpTaxonomyEdge!]!
  group(field: WpTaxonomyFieldsEnum!, limit: Int, skip: Int): [WpTaxonomyGroupConnection!]!
  nodes: [WpTaxonomy!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpTaxonomyEdge {
  next: WpTaxonomy
  node: WpTaxonomy!
  previous: WpTaxonomy
}

type WpTaxonomyGroupConnection {
  edges: [WpTaxonomyEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpTaxonomy!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the Taxonomy type and the ContentType type"
type WpTaxonomyToContentTypeConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpContentType]
}

type WpTermNodeConnection {
  distinct(field: WpTermNodeFieldsEnum!): [String!]!
  edges: [WpTermNodeEdge!]!
  group(field: WpTermNodeFieldsEnum!, limit: Int, skip: Int): [WpTermNodeGroupConnection!]!
  nodes: [WpTermNode!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpTermNodeEdge {
  next: WpTermNode
  node: WpTermNode!
  previous: WpTermNode
}

type WpTermNodeGroupConnection {
  edges: [WpTermNodeEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpTermNode!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"A User object"
type WpUser implements Node & WpCommenter & WpDatabaseIdentifier & WpNode & WpUniformResourceIdentifiable {
  "Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument."
  avatar: WpAvatar
  "User metadata option name. Usually it will be &quot;wp_capabilities&quot;."
  capKey: String
  "A list of capabilities (permissions) granted to the user"
  capabilities: [String]
  children: [Node!]!
  "Connection between the User type and the Comment type"
  comments: WpUserToCommentConnection
  "Identifies the primary key from the database."
  databaseId: Int!
  "Description of the user."
  description: String
  "Email address of the user. This is equivalent to the WP_User-&gt;user_email property."
  email: String
  "A complete list of capabilities including capabilities inherited from a role. This is equivalent to the array keys of WP_User-&gt;allcaps."
  extraCapabilities: [String]
  "First name of the user. This is equivalent to the WP_User-&gt;user_first_name property."
  firstName: String
  id: ID!
  internal: Internal!
  "Last name of the user. This is equivalent to the WP_User-&gt;user_last_name property."
  lastName: String
  "The preferred language locale set for the user. Value derived from get_user_locale()."
  locale: String
  "Display name of the user. This is equivalent to the WP_User-&gt;dispaly_name property."
  name: String
  "The nicename for the user. This field is equivalent to WP_User-&gt;user_nicename"
  nicename: String
  "Nickname of the user."
  nickname: String
  nodeType: String
  "Connection between the User type and the page type"
  pages: WpUserToPageConnection
  parent: Node
  "Connection between the User type and the post type"
  posts: WpUserToPostConnection
  "The date the user registered or was created. The field follows a full ISO8601 date string format."
  registeredDate: String
  "Connection between the User type and the UserRole type"
  roles: WpUserToUserRoleConnection
  "The slug for the user. This field is equivalent to WP_User-&gt;user_nicename"
  slug: String
  "The unique resource identifier path"
  uri: String
  "A website url that is associated with the user."
  url: String
  "Username for the user. This field is equivalent to WP_User-&gt;user_login."
  username: String
}

type WpUserConnection {
  distinct(field: WpUserFieldsEnum!): [String!]!
  edges: [WpUserEdge!]!
  group(field: WpUserFieldsEnum!, limit: Int, skip: Int): [WpUserGroupConnection!]!
  nodes: [WpUser!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpUserEdge {
  next: WpUser
  node: WpUser!
  previous: WpUser
}

type WpUserGroupConnection {
  edges: [WpUserEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpUser!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"A user role object"
type WpUserRole implements Node & WpNode {
  "The capabilities that belong to this role"
  capabilities: [String]
  children: [Node!]!
  "The display name of the role"
  displayName: String
  id: ID!
  internal: Internal!
  "The registered name of the role"
  name: String
  nodeType: String
  parent: Node
}

type WpUserRoleConnection {
  distinct(field: WpUserRoleFieldsEnum!): [String!]!
  edges: [WpUserRoleEdge!]!
  group(field: WpUserRoleFieldsEnum!, limit: Int, skip: Int): [WpUserRoleGroupConnection!]!
  nodes: [WpUserRole!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WpUserRoleEdge {
  next: WpUserRole
  node: WpUserRole!
  previous: WpUserRole
}

type WpUserRoleGroupConnection {
  edges: [WpUserRoleEdge!]!
  field: String!
  fieldValue: String
  nodes: [WpUserRole!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"Connection between the User type and the Comment type"
type WpUserToCommentConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpComment]
}

"Connection between the User type and the page type"
type WpUserToPageConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpPage]
}

"Connection between the User type and the post type"
type WpUserToPostConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpPost]
}

"Connection between the User type and the UserRole type"
type WpUserToUserRoleConnection {
  "The nodes of the connection, without the edges"
  nodes: [WpUserRole]
}

"Information needed by gatsby-source-wordpress."
type WpWPGatsby {
  "Returns wether or not pretty permalinks are enabled."
  arePrettyPermalinksEnabled: Boolean
  "Wether or not the Preview frontend URL is online."
  isPreviewFrontendOnline: Boolean
}

"The writing setting type"
type WpWritingSettings {
  "Default post category."
  defaultCategory: Int
  "Default post format."
  defaultPostFormat: String
  "Convert emoticons like :-) and :-P to graphics on display."
  useSmilies: Boolean
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children
  childrenImageSharp
  childrenImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  hash
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum ImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum ImageSharpFieldsEnum {
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___author
  siteMetadata___description
  siteMetadata___siteUrl
  siteMetadata___title
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  componentPath
  context___archivePath
  context___archiveType
  context___categoryDatabaseId
  context___firstId
  context___id
  context___nextPage
  context___offset
  context___pageNumber
  context___perPage
  context___previousPage
  context___totalPages
  context___uri
  context___userDatabaseId
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  matchPath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreatorId
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___description
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreator___packageJson___license
  pluginCreator___packageJson___main
  pluginCreator___packageJson___name
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___version
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions___allExtensions
  pluginCreator___pluginOptions___base64Width
  pluginCreator___pluginOptions___debug___disableCompatibilityCheck
  pluginCreator___pluginOptions___debug___preview
  pluginCreator___pluginOptions___debug___throwRefetchErrors
  pluginCreator___pluginOptions___debug___timeBuildSteps
  pluginCreator___pluginOptions___defaultQuality
  pluginCreator___pluginOptions___develop___hardCacheData
  pluginCreator___pluginOptions___develop___hardCacheMediaFiles
  pluginCreator___pluginOptions___develop___nodeUpdateInterval
  pluginCreator___pluginOptions___excludeFieldNames
  pluginCreator___pluginOptions___failOnError
  pluginCreator___pluginOptions___html___createStaticFiles
  pluginCreator___pluginOptions___html___fallbackImageMaxWidth
  pluginCreator___pluginOptions___html___imageQuality
  pluginCreator___pluginOptions___html___useGatsbyImage
  pluginCreator___pluginOptions___isTSX
  pluginCreator___pluginOptions___jsxPragma
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___stripMetadata
  pluginCreator___pluginOptions___type___RootQuery
  pluginCreator___pluginOptions___url
  pluginCreator___pluginOptions___verbose
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___description
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___keywords
  packageJson___license
  packageJson___main
  packageJson___name
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___version
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions___allExtensions
  pluginOptions___base64Width
  pluginOptions___debug___disableCompatibilityCheck
  pluginOptions___debug___graphql___copyNodeSourcingQueryAndExit
  pluginOptions___debug___graphql___copyQueryOnError
  pluginOptions___debug___graphql___onlyReportCriticalErrors
  pluginOptions___debug___graphql___panicOnError
  pluginOptions___debug___graphql___printIntrospectionDiff
  pluginOptions___debug___graphql___showQueryOnError
  pluginOptions___debug___graphql___showQueryVarsOnError
  pluginOptions___debug___graphql___writeQueriesToDisk
  pluginOptions___debug___preview
  pluginOptions___debug___throwRefetchErrors
  pluginOptions___debug___timeBuildSteps
  pluginOptions___defaultQuality
  pluginOptions___develop___hardCacheData
  pluginOptions___develop___hardCacheMediaFiles
  pluginOptions___develop___nodeUpdateInterval
  pluginOptions___excludeFieldNames
  pluginOptions___failOnError
  pluginOptions___html___createStaticFiles
  pluginOptions___html___fallbackImageMaxWidth
  pluginOptions___html___imageQuality
  pluginOptions___html___useGatsbyImage
  pluginOptions___isTSX
  pluginOptions___jsxPragma
  pluginOptions___name
  pluginOptions___path
  pluginOptions___pathCheck
  pluginOptions___stripMetadata
  pluginOptions___type___CoreParagraphBlockAttributesV2___exclude
  pluginOptions___type___Post___limit
  pluginOptions___type___RootQuery
  pluginOptions___url
  pluginOptions___verbose
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

enum WpCategoryFieldsEnum {
  ancestors___nodes
  ancestors___nodes___ancestors___nodes
  ancestors___nodes___children
  ancestors___nodes___children___children
  ancestors___nodes___children___id
  ancestors___nodes___contentNodes___nodes
  ancestors___nodes___count
  ancestors___nodes___databaseId
  ancestors___nodes___description
  ancestors___nodes___id
  ancestors___nodes___internal___content
  ancestors___nodes___internal___contentDigest
  ancestors___nodes___internal___description
  ancestors___nodes___internal___fieldOwners
  ancestors___nodes___internal___ignoreType
  ancestors___nodes___internal___mediaType
  ancestors___nodes___internal___owner
  ancestors___nodes___internal___type
  ancestors___nodes___link
  ancestors___nodes___name
  ancestors___nodes___nodeType
  ancestors___nodes___parentDatabaseId
  ancestors___nodes___parentId
  ancestors___nodes___parent___children
  ancestors___nodes___parent___id
  ancestors___nodes___posts___nodes
  ancestors___nodes___slug
  ancestors___nodes___termGroupId
  ancestors___nodes___termTaxonomyId
  ancestors___nodes___uri
  ancestors___nodes___wpChildren___nodes
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentNodes___nodes
  contentNodes___nodes___children
  contentNodes___nodes___children___children
  contentNodes___nodes___children___id
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___children
  contentNodes___nodes___parent___id
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  count
  databaseId
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  link
  name
  nodeType
  parentDatabaseId
  parentId
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___children
  posts___nodes___children___children
  posts___nodes___children___id
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___nodeType
  posts___nodes___parent___children
  posts___nodes___parent___id
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  slug
  taxonomy___node___archivePath
  taxonomy___node___children
  taxonomy___node___children___children
  taxonomy___node___children___id
  taxonomy___node___connectedContentTypes___nodes
  taxonomy___node___description
  taxonomy___node___graphqlPluralName
  taxonomy___node___graphqlSingleName
  taxonomy___node___hierarchical
  taxonomy___node___id
  taxonomy___node___internal___content
  taxonomy___node___internal___contentDigest
  taxonomy___node___internal___description
  taxonomy___node___internal___fieldOwners
  taxonomy___node___internal___ignoreType
  taxonomy___node___internal___mediaType
  taxonomy___node___internal___owner
  taxonomy___node___internal___type
  taxonomy___node___label
  taxonomy___node___name
  taxonomy___node___nodeType
  taxonomy___node___parent___children
  taxonomy___node___parent___id
  taxonomy___node___public
  taxonomy___node___restBase
  taxonomy___node___restControllerClass
  taxonomy___node___showCloud
  taxonomy___node___showInAdminColumn
  taxonomy___node___showInGraphql
  taxonomy___node___showInMenu
  taxonomy___node___showInNavMenus
  taxonomy___node___showInQuickEdit
  taxonomy___node___showInRest
  taxonomy___node___showUi
  termGroupId
  termTaxonomyId
  uri
  wpChildren___nodes
  wpChildren___nodes___ancestors___nodes
  wpChildren___nodes___children
  wpChildren___nodes___children___children
  wpChildren___nodes___children___id
  wpChildren___nodes___contentNodes___nodes
  wpChildren___nodes___count
  wpChildren___nodes___databaseId
  wpChildren___nodes___description
  wpChildren___nodes___id
  wpChildren___nodes___internal___content
  wpChildren___nodes___internal___contentDigest
  wpChildren___nodes___internal___description
  wpChildren___nodes___internal___fieldOwners
  wpChildren___nodes___internal___ignoreType
  wpChildren___nodes___internal___mediaType
  wpChildren___nodes___internal___owner
  wpChildren___nodes___internal___type
  wpChildren___nodes___link
  wpChildren___nodes___name
  wpChildren___nodes___nodeType
  wpChildren___nodes___parentDatabaseId
  wpChildren___nodes___parentId
  wpChildren___nodes___parent___children
  wpChildren___nodes___parent___id
  wpChildren___nodes___posts___nodes
  wpChildren___nodes___slug
  wpChildren___nodes___termGroupId
  wpChildren___nodes___termTaxonomyId
  wpChildren___nodes___uri
  wpChildren___nodes___wpChildren___nodes
  wpParent___node___ancestors___nodes
  wpParent___node___children
  wpParent___node___children___children
  wpParent___node___children___id
  wpParent___node___contentNodes___nodes
  wpParent___node___count
  wpParent___node___databaseId
  wpParent___node___description
  wpParent___node___id
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  wpParent___node___link
  wpParent___node___name
  wpParent___node___nodeType
  wpParent___node___parentDatabaseId
  wpParent___node___parentId
  wpParent___node___parent___children
  wpParent___node___parent___id
  wpParent___node___posts___nodes
  wpParent___node___slug
  wpParent___node___termGroupId
  wpParent___node___termTaxonomyId
  wpParent___node___uri
  wpParent___node___wpChildren___nodes
}

enum WpCommentAuthorFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  databaseId
  email
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  url
}

enum WpCommentFieldsEnum {
  agent
  approved
  authorIp
  author___node___databaseId
  author___node___email
  author___node___id
  author___node___name
  author___node___url
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  commentedOn___node___children
  commentedOn___node___children___children
  commentedOn___node___children___id
  commentedOn___node___databaseId
  commentedOn___node___date
  commentedOn___node___dateGmt
  commentedOn___node___desiredSlug
  commentedOn___node___enclosure
  commentedOn___node___guid
  commentedOn___node___id
  commentedOn___node___internal___content
  commentedOn___node___internal___contentDigest
  commentedOn___node___internal___description
  commentedOn___node___internal___fieldOwners
  commentedOn___node___internal___ignoreType
  commentedOn___node___internal___mediaType
  commentedOn___node___internal___owner
  commentedOn___node___internal___type
  commentedOn___node___link
  commentedOn___node___modified
  commentedOn___node___modifiedGmt
  commentedOn___node___nodeType
  commentedOn___node___parent___children
  commentedOn___node___parent___id
  commentedOn___node___slug
  commentedOn___node___status
  commentedOn___node___template___templateName
  commentedOn___node___uri
  content
  databaseId
  date
  dateGmt
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  karma
  nodeType
  parentDatabaseId
  parentId
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  replies___nodes
  replies___nodes___agent
  replies___nodes___approved
  replies___nodes___authorIp
  replies___nodes___children
  replies___nodes___children___children
  replies___nodes___children___id
  replies___nodes___content
  replies___nodes___databaseId
  replies___nodes___date
  replies___nodes___dateGmt
  replies___nodes___id
  replies___nodes___internal___content
  replies___nodes___internal___contentDigest
  replies___nodes___internal___description
  replies___nodes___internal___fieldOwners
  replies___nodes___internal___ignoreType
  replies___nodes___internal___mediaType
  replies___nodes___internal___owner
  replies___nodes___internal___type
  replies___nodes___karma
  replies___nodes___nodeType
  replies___nodes___parentDatabaseId
  replies___nodes___parentId
  replies___nodes___parent___children
  replies___nodes___parent___id
  replies___nodes___replies___nodes
  replies___nodes___type
  type
  wpParent___node___agent
  wpParent___node___approved
  wpParent___node___authorIp
  wpParent___node___children
  wpParent___node___children___children
  wpParent___node___children___id
  wpParent___node___content
  wpParent___node___databaseId
  wpParent___node___date
  wpParent___node___dateGmt
  wpParent___node___id
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  wpParent___node___karma
  wpParent___node___nodeType
  wpParent___node___parentDatabaseId
  wpParent___node___parentId
  wpParent___node___parent___children
  wpParent___node___parent___id
  wpParent___node___replies___nodes
  wpParent___node___type
}

enum WpContentNodeFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___children
  contentType___node___children___children
  contentType___node___children___id
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___nodeType
  contentType___node___parent___children
  contentType___node___parent___id
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  databaseId
  date
  dateGmt
  desiredSlug
  enclosure
  guid
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___children
  lastEditedBy___node___children___children
  lastEditedBy___node___children___id
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___nodeType
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___parent___children
  lastEditedBy___node___parent___id
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  link
  modified
  modifiedGmt
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  slug
  status
  template___templateName
  uri
}

enum WpContentTypeFieldsEnum {
  archivePath
  canExport
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  connectedTaxonomies___nodes
  connectedTaxonomies___nodes___archivePath
  connectedTaxonomies___nodes___children
  connectedTaxonomies___nodes___children___children
  connectedTaxonomies___nodes___children___id
  connectedTaxonomies___nodes___connectedContentTypes___nodes
  connectedTaxonomies___nodes___description
  connectedTaxonomies___nodes___graphqlPluralName
  connectedTaxonomies___nodes___graphqlSingleName
  connectedTaxonomies___nodes___hierarchical
  connectedTaxonomies___nodes___id
  connectedTaxonomies___nodes___internal___content
  connectedTaxonomies___nodes___internal___contentDigest
  connectedTaxonomies___nodes___internal___description
  connectedTaxonomies___nodes___internal___fieldOwners
  connectedTaxonomies___nodes___internal___ignoreType
  connectedTaxonomies___nodes___internal___mediaType
  connectedTaxonomies___nodes___internal___owner
  connectedTaxonomies___nodes___internal___type
  connectedTaxonomies___nodes___label
  connectedTaxonomies___nodes___name
  connectedTaxonomies___nodes___nodeType
  connectedTaxonomies___nodes___parent___children
  connectedTaxonomies___nodes___parent___id
  connectedTaxonomies___nodes___public
  connectedTaxonomies___nodes___restBase
  connectedTaxonomies___nodes___restControllerClass
  connectedTaxonomies___nodes___showCloud
  connectedTaxonomies___nodes___showInAdminColumn
  connectedTaxonomies___nodes___showInGraphql
  connectedTaxonomies___nodes___showInMenu
  connectedTaxonomies___nodes___showInNavMenus
  connectedTaxonomies___nodes___showInQuickEdit
  connectedTaxonomies___nodes___showInRest
  connectedTaxonomies___nodes___showUi
  contentNodes___nodes
  contentNodes___nodes___children
  contentNodes___nodes___children___children
  contentNodes___nodes___children___id
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___children
  contentNodes___nodes___parent___id
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  deleteWithUser
  description
  excludeFromSearch
  graphqlPluralName
  graphqlSingleName
  hasArchive
  hierarchical
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isFrontPage
  isPostsPage
  label
  labels___addNew
  labels___addNewItem
  labels___allItems
  labels___archives
  labels___attributes
  labels___editItem
  labels___featuredImage
  labels___filterItemsList
  labels___insertIntoItem
  labels___itemsList
  labels___itemsListNavigation
  labels___menuName
  labels___name
  labels___newItem
  labels___notFound
  labels___notFoundInTrash
  labels___parentItemColon
  labels___removeFeaturedImage
  labels___searchItems
  labels___setFeaturedImage
  labels___singularName
  labels___uploadedToThisItem
  labels___useFeaturedImage
  labels___viewItem
  labels___viewItems
  menuIcon
  menuPosition
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  public
  publiclyQueryable
  restBase
  restControllerClass
  showInAdminBar
  showInGraphql
  showInMenu
  showInNavMenus
  showInRest
  showUi
  uri
}

enum WpFieldsEnum {
  allSettings___discussionSettingsDefaultCommentStatus
  allSettings___discussionSettingsDefaultPingStatus
  allSettings___generalSettingsDateFormat
  allSettings___generalSettingsDescription
  allSettings___generalSettingsEmail
  allSettings___generalSettingsLanguage
  allSettings___generalSettingsStartOfWeek
  allSettings___generalSettingsTimeFormat
  allSettings___generalSettingsTimezone
  allSettings___generalSettingsTitle
  allSettings___generalSettingsUrl
  allSettings___readingSettingsPostsPerPage
  allSettings___writingSettingsDefaultCategory
  allSettings___writingSettingsDefaultPostFormat
  allSettings___writingSettingsUseSmilies
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  discussionSettings___defaultCommentStatus
  discussionSettings___defaultPingStatus
  generalSettings___dateFormat
  generalSettings___description
  generalSettings___email
  generalSettings___language
  generalSettings___startOfWeek
  generalSettings___timeFormat
  generalSettings___timezone
  generalSettings___title
  generalSettings___url
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  readingSettings___postsPerPage
  schemaMd5
  viewer___avatar___default
  viewer___avatar___extraAttr
  viewer___avatar___forceDefault
  viewer___avatar___foundAvatar
  viewer___avatar___height
  viewer___avatar___rating
  viewer___avatar___scheme
  viewer___avatar___size
  viewer___avatar___url
  viewer___avatar___width
  viewer___capKey
  viewer___capabilities
  viewer___children
  viewer___children___children
  viewer___children___children___children
  viewer___children___children___id
  viewer___children___id
  viewer___children___internal___content
  viewer___children___internal___contentDigest
  viewer___children___internal___description
  viewer___children___internal___fieldOwners
  viewer___children___internal___ignoreType
  viewer___children___internal___mediaType
  viewer___children___internal___owner
  viewer___children___internal___type
  viewer___children___parent___children
  viewer___children___parent___id
  viewer___comments___nodes
  viewer___comments___nodes___agent
  viewer___comments___nodes___approved
  viewer___comments___nodes___authorIp
  viewer___comments___nodes___children
  viewer___comments___nodes___content
  viewer___comments___nodes___databaseId
  viewer___comments___nodes___date
  viewer___comments___nodes___dateGmt
  viewer___comments___nodes___id
  viewer___comments___nodes___karma
  viewer___comments___nodes___nodeType
  viewer___comments___nodes___parentDatabaseId
  viewer___comments___nodes___parentId
  viewer___comments___nodes___type
  viewer___databaseId
  viewer___description
  viewer___email
  viewer___extraCapabilities
  viewer___firstName
  viewer___id
  viewer___internal___content
  viewer___internal___contentDigest
  viewer___internal___description
  viewer___internal___fieldOwners
  viewer___internal___ignoreType
  viewer___internal___mediaType
  viewer___internal___owner
  viewer___internal___type
  viewer___lastName
  viewer___locale
  viewer___name
  viewer___nicename
  viewer___nickname
  viewer___nodeType
  viewer___pages___nodes
  viewer___pages___nodes___authorDatabaseId
  viewer___pages___nodes___authorId
  viewer___pages___nodes___children
  viewer___pages___nodes___commentCount
  viewer___pages___nodes___commentStatus
  viewer___pages___nodes___content
  viewer___pages___nodes___databaseId
  viewer___pages___nodes___date
  viewer___pages___nodes___dateGmt
  viewer___pages___nodes___desiredSlug
  viewer___pages___nodes___enclosure
  viewer___pages___nodes___featuredImageDatabaseId
  viewer___pages___nodes___featuredImageId
  viewer___pages___nodes___guid
  viewer___pages___nodes___id
  viewer___pages___nodes___isFrontPage
  viewer___pages___nodes___isPostsPage
  viewer___pages___nodes___isPrivacyPage
  viewer___pages___nodes___isRevision
  viewer___pages___nodes___link
  viewer___pages___nodes___menuOrder
  viewer___pages___nodes___modified
  viewer___pages___nodes___modifiedGmt
  viewer___pages___nodes___nodeType
  viewer___pages___nodes___parentDatabaseId
  viewer___pages___nodes___parentId
  viewer___pages___nodes___slug
  viewer___pages___nodes___status
  viewer___pages___nodes___title
  viewer___pages___nodes___uri
  viewer___parent___children
  viewer___parent___children___children
  viewer___parent___children___id
  viewer___parent___id
  viewer___parent___internal___content
  viewer___parent___internal___contentDigest
  viewer___parent___internal___description
  viewer___parent___internal___fieldOwners
  viewer___parent___internal___ignoreType
  viewer___parent___internal___mediaType
  viewer___parent___internal___owner
  viewer___parent___internal___type
  viewer___parent___parent___children
  viewer___parent___parent___id
  viewer___posts___nodes
  viewer___posts___nodes___authorDatabaseId
  viewer___posts___nodes___authorId
  viewer___posts___nodes___children
  viewer___posts___nodes___commentCount
  viewer___posts___nodes___commentStatus
  viewer___posts___nodes___content
  viewer___posts___nodes___databaseId
  viewer___posts___nodes___date
  viewer___posts___nodes___dateGmt
  viewer___posts___nodes___desiredSlug
  viewer___posts___nodes___enclosure
  viewer___posts___nodes___excerpt
  viewer___posts___nodes___featuredImageDatabaseId
  viewer___posts___nodes___featuredImageId
  viewer___posts___nodes___guid
  viewer___posts___nodes___id
  viewer___posts___nodes___isRevision
  viewer___posts___nodes___isSticky
  viewer___posts___nodes___link
  viewer___posts___nodes___modified
  viewer___posts___nodes___modifiedGmt
  viewer___posts___nodes___nodeType
  viewer___posts___nodes___pingStatus
  viewer___posts___nodes___pinged
  viewer___posts___nodes___slug
  viewer___posts___nodes___status
  viewer___posts___nodes___title
  viewer___posts___nodes___toPing
  viewer___posts___nodes___uri
  viewer___registeredDate
  viewer___roles___nodes
  viewer___roles___nodes___capabilities
  viewer___roles___nodes___children
  viewer___roles___nodes___displayName
  viewer___roles___nodes___id
  viewer___roles___nodes___name
  viewer___roles___nodes___nodeType
  viewer___slug
  viewer___uri
  viewer___url
  viewer___username
  wpGatsby___arePrettyPermalinksEnabled
  wpGatsby___isPreviewFrontendOnline
  writingSettings___defaultCategory
  writingSettings___defaultPostFormat
  writingSettings___useSmilies
}

enum WpMediaItemFieldsEnum {
  altText
  ancestors___nodes
  ancestors___nodes___children
  ancestors___nodes___children___children
  ancestors___nodes___children___id
  ancestors___nodes___databaseId
  ancestors___nodes___date
  ancestors___nodes___dateGmt
  ancestors___nodes___desiredSlug
  ancestors___nodes___enclosure
  ancestors___nodes___guid
  ancestors___nodes___id
  ancestors___nodes___internal___content
  ancestors___nodes___internal___contentDigest
  ancestors___nodes___internal___description
  ancestors___nodes___internal___fieldOwners
  ancestors___nodes___internal___ignoreType
  ancestors___nodes___internal___mediaType
  ancestors___nodes___internal___owner
  ancestors___nodes___internal___type
  ancestors___nodes___link
  ancestors___nodes___modified
  ancestors___nodes___modifiedGmt
  ancestors___nodes___nodeType
  ancestors___nodes___parent___children
  ancestors___nodes___parent___id
  ancestors___nodes___slug
  ancestors___nodes___status
  ancestors___nodes___template___templateName
  ancestors___nodes___uri
  authorDatabaseId
  authorId
  author___node___avatar___default
  author___node___avatar___extraAttr
  author___node___avatar___forceDefault
  author___node___avatar___foundAvatar
  author___node___avatar___height
  author___node___avatar___rating
  author___node___avatar___scheme
  author___node___avatar___size
  author___node___avatar___url
  author___node___avatar___width
  author___node___capKey
  author___node___capabilities
  author___node___children
  author___node___children___children
  author___node___children___id
  author___node___comments___nodes
  author___node___databaseId
  author___node___description
  author___node___email
  author___node___extraCapabilities
  author___node___firstName
  author___node___id
  author___node___internal___content
  author___node___internal___contentDigest
  author___node___internal___description
  author___node___internal___fieldOwners
  author___node___internal___ignoreType
  author___node___internal___mediaType
  author___node___internal___owner
  author___node___internal___type
  author___node___lastName
  author___node___locale
  author___node___name
  author___node___nicename
  author___node___nickname
  author___node___nodeType
  author___node___pages___nodes
  author___node___parent___children
  author___node___parent___id
  author___node___posts___nodes
  author___node___registeredDate
  author___node___roles___nodes
  author___node___slug
  author___node___uri
  author___node___url
  author___node___username
  caption
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  commentCount
  commentStatus
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___children
  comments___nodes___children___children
  comments___nodes___children___id
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  comments___nodes___karma
  comments___nodes___nodeType
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___parent___children
  comments___nodes___parent___id
  comments___nodes___replies___nodes
  comments___nodes___type
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___children
  contentType___node___children___children
  contentType___node___children___id
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___nodeType
  contentType___node___parent___children
  contentType___node___parent___id
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  databaseId
  date
  dateGmt
  description
  desiredSlug
  enclosure
  fileSize
  guid
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___children
  lastEditedBy___node___children___children
  lastEditedBy___node___children___id
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___nodeType
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___parent___children
  lastEditedBy___node___parent___id
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  link
  localFile___absolutePath
  localFile___accessTime
  localFile___atime
  localFile___atimeMs
  localFile___base
  localFile___birthTime
  localFile___birthtime
  localFile___birthtimeMs
  localFile___blksize
  localFile___blocks
  localFile___changeTime
  localFile___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___children
  localFile___childrenImageSharp
  localFile___childrenImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___childrenImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  localFile___children___children
  localFile___children___children___children
  localFile___children___children___id
  localFile___children___id
  localFile___children___internal___content
  localFile___children___internal___contentDigest
  localFile___children___internal___description
  localFile___children___internal___fieldOwners
  localFile___children___internal___ignoreType
  localFile___children___internal___mediaType
  localFile___children___internal___owner
  localFile___children___internal___type
  localFile___children___parent___children
  localFile___children___parent___id
  localFile___ctime
  localFile___ctimeMs
  localFile___dev
  localFile___dir
  localFile___ext
  localFile___extension
  localFile___gid
  localFile___hash
  localFile___id
  localFile___ino
  localFile___internal___content
  localFile___internal___contentDigest
  localFile___internal___description
  localFile___internal___fieldOwners
  localFile___internal___ignoreType
  localFile___internal___mediaType
  localFile___internal___owner
  localFile___internal___type
  localFile___mode
  localFile___modifiedTime
  localFile___mtime
  localFile___mtimeMs
  localFile___name
  localFile___nlink
  localFile___parent___children
  localFile___parent___children___children
  localFile___parent___children___id
  localFile___parent___id
  localFile___parent___internal___content
  localFile___parent___internal___contentDigest
  localFile___parent___internal___description
  localFile___parent___internal___fieldOwners
  localFile___parent___internal___ignoreType
  localFile___parent___internal___mediaType
  localFile___parent___internal___owner
  localFile___parent___internal___type
  localFile___parent___parent___children
  localFile___parent___parent___id
  localFile___prettySize
  localFile___publicURL
  localFile___rdev
  localFile___relativeDirectory
  localFile___relativePath
  localFile___root
  localFile___size
  localFile___sourceInstanceName
  localFile___uid
  mediaDetails___file
  mediaDetails___height
  mediaDetails___meta___aperture
  mediaDetails___meta___camera
  mediaDetails___meta___caption
  mediaDetails___meta___copyright
  mediaDetails___meta___createdTimestamp
  mediaDetails___meta___credit
  mediaDetails___meta___focalLength
  mediaDetails___meta___iso
  mediaDetails___meta___keywords
  mediaDetails___meta___orientation
  mediaDetails___meta___shutterSpeed
  mediaDetails___meta___title
  mediaDetails___sizes
  mediaDetails___sizes___file
  mediaDetails___sizes___fileSize
  mediaDetails___sizes___height
  mediaDetails___sizes___mimeType
  mediaDetails___sizes___name
  mediaDetails___sizes___sourceUrl
  mediaDetails___sizes___width
  mediaDetails___width
  mediaItemUrl
  mediaType
  mimeType
  modified
  modifiedGmt
  nodeType
  parentDatabaseId
  parentId
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  remoteFile___absolutePath
  remoteFile___accessTime
  remoteFile___atime
  remoteFile___atimeMs
  remoteFile___base
  remoteFile___birthTime
  remoteFile___birthtime
  remoteFile___birthtimeMs
  remoteFile___blksize
  remoteFile___blocks
  remoteFile___changeTime
  remoteFile___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___children
  remoteFile___childrenImageSharp
  remoteFile___childrenImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___childrenImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  remoteFile___children___children
  remoteFile___children___children___children
  remoteFile___children___children___id
  remoteFile___children___id
  remoteFile___children___internal___content
  remoteFile___children___internal___contentDigest
  remoteFile___children___internal___description
  remoteFile___children___internal___fieldOwners
  remoteFile___children___internal___ignoreType
  remoteFile___children___internal___mediaType
  remoteFile___children___internal___owner
  remoteFile___children___internal___type
  remoteFile___children___parent___children
  remoteFile___children___parent___id
  remoteFile___ctime
  remoteFile___ctimeMs
  remoteFile___dev
  remoteFile___dir
  remoteFile___ext
  remoteFile___extension
  remoteFile___gid
  remoteFile___hash
  remoteFile___id
  remoteFile___ino
  remoteFile___internal___content
  remoteFile___internal___contentDigest
  remoteFile___internal___description
  remoteFile___internal___fieldOwners
  remoteFile___internal___ignoreType
  remoteFile___internal___mediaType
  remoteFile___internal___owner
  remoteFile___internal___type
  remoteFile___mode
  remoteFile___modifiedTime
  remoteFile___mtime
  remoteFile___mtimeMs
  remoteFile___name
  remoteFile___nlink
  remoteFile___parent___children
  remoteFile___parent___children___children
  remoteFile___parent___children___id
  remoteFile___parent___id
  remoteFile___parent___internal___content
  remoteFile___parent___internal___contentDigest
  remoteFile___parent___internal___description
  remoteFile___parent___internal___fieldOwners
  remoteFile___parent___internal___ignoreType
  remoteFile___parent___internal___mediaType
  remoteFile___parent___internal___owner
  remoteFile___parent___internal___type
  remoteFile___parent___parent___children
  remoteFile___parent___parent___id
  remoteFile___prettySize
  remoteFile___publicURL
  remoteFile___rdev
  remoteFile___relativeDirectory
  remoteFile___relativePath
  remoteFile___root
  remoteFile___size
  remoteFile___sourceInstanceName
  remoteFile___uid
  sizes
  slug
  sourceUrl
  srcSet
  status
  template___templateName
  title
  uri
  wpChildren___nodes
  wpChildren___nodes___children
  wpChildren___nodes___children___children
  wpChildren___nodes___children___id
  wpChildren___nodes___databaseId
  wpChildren___nodes___date
  wpChildren___nodes___dateGmt
  wpChildren___nodes___desiredSlug
  wpChildren___nodes___enclosure
  wpChildren___nodes___guid
  wpChildren___nodes___id
  wpChildren___nodes___internal___content
  wpChildren___nodes___internal___contentDigest
  wpChildren___nodes___internal___description
  wpChildren___nodes___internal___fieldOwners
  wpChildren___nodes___internal___ignoreType
  wpChildren___nodes___internal___mediaType
  wpChildren___nodes___internal___owner
  wpChildren___nodes___internal___type
  wpChildren___nodes___link
  wpChildren___nodes___modified
  wpChildren___nodes___modifiedGmt
  wpChildren___nodes___nodeType
  wpChildren___nodes___parent___children
  wpChildren___nodes___parent___id
  wpChildren___nodes___slug
  wpChildren___nodes___status
  wpChildren___nodes___template___templateName
  wpChildren___nodes___uri
  wpParent___node___children
  wpParent___node___children___children
  wpParent___node___children___id
  wpParent___node___databaseId
  wpParent___node___date
  wpParent___node___dateGmt
  wpParent___node___desiredSlug
  wpParent___node___enclosure
  wpParent___node___guid
  wpParent___node___id
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  wpParent___node___link
  wpParent___node___modified
  wpParent___node___modifiedGmt
  wpParent___node___nodeType
  wpParent___node___parent___children
  wpParent___node___parent___id
  wpParent___node___slug
  wpParent___node___status
  wpParent___node___template___templateName
  wpParent___node___uri
}

enum WpMenuFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  count
  databaseId
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  locations
  menuItems___nodes
  menuItems___nodes___childItems___nodes
  menuItems___nodes___children
  menuItems___nodes___children___children
  menuItems___nodes___children___id
  menuItems___nodes___cssClasses
  menuItems___nodes___databaseId
  menuItems___nodes___description
  menuItems___nodes___id
  menuItems___nodes___internal___content
  menuItems___nodes___internal___contentDigest
  menuItems___nodes___internal___description
  menuItems___nodes___internal___fieldOwners
  menuItems___nodes___internal___ignoreType
  menuItems___nodes___internal___mediaType
  menuItems___nodes___internal___owner
  menuItems___nodes___internal___type
  menuItems___nodes___label
  menuItems___nodes___linkRelationship
  menuItems___nodes___locations
  menuItems___nodes___nodeType
  menuItems___nodes___order
  menuItems___nodes___parentDatabaseId
  menuItems___nodes___parentId
  menuItems___nodes___parent___children
  menuItems___nodes___parent___id
  menuItems___nodes___path
  menuItems___nodes___target
  menuItems___nodes___title
  menuItems___nodes___url
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  slug
}

enum WpMenuItemFieldsEnum {
  childItems___nodes
  childItems___nodes___childItems___nodes
  childItems___nodes___children
  childItems___nodes___children___children
  childItems___nodes___children___id
  childItems___nodes___cssClasses
  childItems___nodes___databaseId
  childItems___nodes___description
  childItems___nodes___id
  childItems___nodes___internal___content
  childItems___nodes___internal___contentDigest
  childItems___nodes___internal___description
  childItems___nodes___internal___fieldOwners
  childItems___nodes___internal___ignoreType
  childItems___nodes___internal___mediaType
  childItems___nodes___internal___owner
  childItems___nodes___internal___type
  childItems___nodes___label
  childItems___nodes___linkRelationship
  childItems___nodes___locations
  childItems___nodes___nodeType
  childItems___nodes___order
  childItems___nodes___parentDatabaseId
  childItems___nodes___parentId
  childItems___nodes___parent___children
  childItems___nodes___parent___id
  childItems___nodes___path
  childItems___nodes___target
  childItems___nodes___title
  childItems___nodes___url
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  connectedNode___node___databaseId
  connectedNode___node___id
  connectedNode___node___uri
  cssClasses
  databaseId
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  label
  linkRelationship
  locations
  menu___node___children
  menu___node___children___children
  menu___node___children___id
  menu___node___count
  menu___node___databaseId
  menu___node___id
  menu___node___internal___content
  menu___node___internal___contentDigest
  menu___node___internal___description
  menu___node___internal___fieldOwners
  menu___node___internal___ignoreType
  menu___node___internal___mediaType
  menu___node___internal___owner
  menu___node___internal___type
  menu___node___locations
  menu___node___menuItems___nodes
  menu___node___name
  menu___node___nodeType
  menu___node___parent___children
  menu___node___parent___id
  menu___node___slug
  nodeType
  order
  parentDatabaseId
  parentId
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  target
  title
  url
}

"Registered menu locations"
enum WpMenuLocationEnum {
  EXPANDED
  FOOTER
  MOBILE
  PRIMARY
  SOCIAL
}

enum WpPageFieldsEnum {
  ancestors___nodes
  ancestors___nodes___children
  ancestors___nodes___children___children
  ancestors___nodes___children___id
  ancestors___nodes___databaseId
  ancestors___nodes___date
  ancestors___nodes___dateGmt
  ancestors___nodes___desiredSlug
  ancestors___nodes___enclosure
  ancestors___nodes___guid
  ancestors___nodes___id
  ancestors___nodes___internal___content
  ancestors___nodes___internal___contentDigest
  ancestors___nodes___internal___description
  ancestors___nodes___internal___fieldOwners
  ancestors___nodes___internal___ignoreType
  ancestors___nodes___internal___mediaType
  ancestors___nodes___internal___owner
  ancestors___nodes___internal___type
  ancestors___nodes___link
  ancestors___nodes___modified
  ancestors___nodes___modifiedGmt
  ancestors___nodes___nodeType
  ancestors___nodes___parent___children
  ancestors___nodes___parent___id
  ancestors___nodes___slug
  ancestors___nodes___status
  ancestors___nodes___template___templateName
  ancestors___nodes___uri
  authorDatabaseId
  authorId
  author___node___avatar___default
  author___node___avatar___extraAttr
  author___node___avatar___forceDefault
  author___node___avatar___foundAvatar
  author___node___avatar___height
  author___node___avatar___rating
  author___node___avatar___scheme
  author___node___avatar___size
  author___node___avatar___url
  author___node___avatar___width
  author___node___capKey
  author___node___capabilities
  author___node___children
  author___node___children___children
  author___node___children___id
  author___node___comments___nodes
  author___node___databaseId
  author___node___description
  author___node___email
  author___node___extraCapabilities
  author___node___firstName
  author___node___id
  author___node___internal___content
  author___node___internal___contentDigest
  author___node___internal___description
  author___node___internal___fieldOwners
  author___node___internal___ignoreType
  author___node___internal___mediaType
  author___node___internal___owner
  author___node___internal___type
  author___node___lastName
  author___node___locale
  author___node___name
  author___node___nicename
  author___node___nickname
  author___node___nodeType
  author___node___pages___nodes
  author___node___parent___children
  author___node___parent___id
  author___node___posts___nodes
  author___node___registeredDate
  author___node___roles___nodes
  author___node___slug
  author___node___uri
  author___node___url
  author___node___username
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  commentCount
  commentStatus
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___children
  comments___nodes___children___children
  comments___nodes___children___id
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  comments___nodes___karma
  comments___nodes___nodeType
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___parent___children
  comments___nodes___parent___id
  comments___nodes___replies___nodes
  comments___nodes___type
  content
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___children
  contentType___node___children___children
  contentType___node___children___id
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___nodeType
  contentType___node___parent___children
  contentType___node___parent___id
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  databaseId
  date
  dateGmt
  desiredSlug
  enclosure
  featuredImageDatabaseId
  featuredImageId
  featuredImage___node___altText
  featuredImage___node___ancestors___nodes
  featuredImage___node___authorDatabaseId
  featuredImage___node___authorId
  featuredImage___node___caption
  featuredImage___node___children
  featuredImage___node___children___children
  featuredImage___node___children___id
  featuredImage___node___commentCount
  featuredImage___node___commentStatus
  featuredImage___node___comments___nodes
  featuredImage___node___databaseId
  featuredImage___node___date
  featuredImage___node___dateGmt
  featuredImage___node___description
  featuredImage___node___desiredSlug
  featuredImage___node___enclosure
  featuredImage___node___fileSize
  featuredImage___node___guid
  featuredImage___node___id
  featuredImage___node___internal___content
  featuredImage___node___internal___contentDigest
  featuredImage___node___internal___description
  featuredImage___node___internal___fieldOwners
  featuredImage___node___internal___ignoreType
  featuredImage___node___internal___mediaType
  featuredImage___node___internal___owner
  featuredImage___node___internal___type
  featuredImage___node___link
  featuredImage___node___localFile___absolutePath
  featuredImage___node___localFile___accessTime
  featuredImage___node___localFile___atime
  featuredImage___node___localFile___atimeMs
  featuredImage___node___localFile___base
  featuredImage___node___localFile___birthTime
  featuredImage___node___localFile___birthtime
  featuredImage___node___localFile___birthtimeMs
  featuredImage___node___localFile___blksize
  featuredImage___node___localFile___blocks
  featuredImage___node___localFile___changeTime
  featuredImage___node___localFile___children
  featuredImage___node___localFile___childrenImageSharp
  featuredImage___node___localFile___ctime
  featuredImage___node___localFile___ctimeMs
  featuredImage___node___localFile___dev
  featuredImage___node___localFile___dir
  featuredImage___node___localFile___ext
  featuredImage___node___localFile___extension
  featuredImage___node___localFile___gid
  featuredImage___node___localFile___hash
  featuredImage___node___localFile___id
  featuredImage___node___localFile___ino
  featuredImage___node___localFile___mode
  featuredImage___node___localFile___modifiedTime
  featuredImage___node___localFile___mtime
  featuredImage___node___localFile___mtimeMs
  featuredImage___node___localFile___name
  featuredImage___node___localFile___nlink
  featuredImage___node___localFile___prettySize
  featuredImage___node___localFile___publicURL
  featuredImage___node___localFile___rdev
  featuredImage___node___localFile___relativeDirectory
  featuredImage___node___localFile___relativePath
  featuredImage___node___localFile___root
  featuredImage___node___localFile___size
  featuredImage___node___localFile___sourceInstanceName
  featuredImage___node___localFile___uid
  featuredImage___node___mediaDetails___file
  featuredImage___node___mediaDetails___height
  featuredImage___node___mediaDetails___sizes
  featuredImage___node___mediaDetails___width
  featuredImage___node___mediaItemUrl
  featuredImage___node___mediaType
  featuredImage___node___mimeType
  featuredImage___node___modified
  featuredImage___node___modifiedGmt
  featuredImage___node___nodeType
  featuredImage___node___parentDatabaseId
  featuredImage___node___parentId
  featuredImage___node___parent___children
  featuredImage___node___parent___id
  featuredImage___node___remoteFile___absolutePath
  featuredImage___node___remoteFile___accessTime
  featuredImage___node___remoteFile___atime
  featuredImage___node___remoteFile___atimeMs
  featuredImage___node___remoteFile___base
  featuredImage___node___remoteFile___birthTime
  featuredImage___node___remoteFile___birthtime
  featuredImage___node___remoteFile___birthtimeMs
  featuredImage___node___remoteFile___blksize
  featuredImage___node___remoteFile___blocks
  featuredImage___node___remoteFile___changeTime
  featuredImage___node___remoteFile___children
  featuredImage___node___remoteFile___childrenImageSharp
  featuredImage___node___remoteFile___ctime
  featuredImage___node___remoteFile___ctimeMs
  featuredImage___node___remoteFile___dev
  featuredImage___node___remoteFile___dir
  featuredImage___node___remoteFile___ext
  featuredImage___node___remoteFile___extension
  featuredImage___node___remoteFile___gid
  featuredImage___node___remoteFile___hash
  featuredImage___node___remoteFile___id
  featuredImage___node___remoteFile___ino
  featuredImage___node___remoteFile___mode
  featuredImage___node___remoteFile___modifiedTime
  featuredImage___node___remoteFile___mtime
  featuredImage___node___remoteFile___mtimeMs
  featuredImage___node___remoteFile___name
  featuredImage___node___remoteFile___nlink
  featuredImage___node___remoteFile___prettySize
  featuredImage___node___remoteFile___publicURL
  featuredImage___node___remoteFile___rdev
  featuredImage___node___remoteFile___relativeDirectory
  featuredImage___node___remoteFile___relativePath
  featuredImage___node___remoteFile___root
  featuredImage___node___remoteFile___size
  featuredImage___node___remoteFile___sourceInstanceName
  featuredImage___node___remoteFile___uid
  featuredImage___node___sizes
  featuredImage___node___slug
  featuredImage___node___sourceUrl
  featuredImage___node___srcSet
  featuredImage___node___status
  featuredImage___node___template___templateName
  featuredImage___node___title
  featuredImage___node___uri
  featuredImage___node___wpChildren___nodes
  guid
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isFrontPage
  isPostsPage
  isPrivacyPage
  isRevision
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___children
  lastEditedBy___node___children___children
  lastEditedBy___node___children___id
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___nodeType
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___parent___children
  lastEditedBy___node___parent___id
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  link
  menuOrder
  modified
  modifiedGmt
  nodeType
  parentDatabaseId
  parentId
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  slug
  status
  template___templateName
  title
  uri
  wpChildren___nodes
  wpChildren___nodes___children
  wpChildren___nodes___children___children
  wpChildren___nodes___children___id
  wpChildren___nodes___databaseId
  wpChildren___nodes___date
  wpChildren___nodes___dateGmt
  wpChildren___nodes___desiredSlug
  wpChildren___nodes___enclosure
  wpChildren___nodes___guid
  wpChildren___nodes___id
  wpChildren___nodes___internal___content
  wpChildren___nodes___internal___contentDigest
  wpChildren___nodes___internal___description
  wpChildren___nodes___internal___fieldOwners
  wpChildren___nodes___internal___ignoreType
  wpChildren___nodes___internal___mediaType
  wpChildren___nodes___internal___owner
  wpChildren___nodes___internal___type
  wpChildren___nodes___link
  wpChildren___nodes___modified
  wpChildren___nodes___modifiedGmt
  wpChildren___nodes___nodeType
  wpChildren___nodes___parent___children
  wpChildren___nodes___parent___id
  wpChildren___nodes___slug
  wpChildren___nodes___status
  wpChildren___nodes___template___templateName
  wpChildren___nodes___uri
  wpParent___node___children
  wpParent___node___children___children
  wpParent___node___children___id
  wpParent___node___databaseId
  wpParent___node___date
  wpParent___node___dateGmt
  wpParent___node___desiredSlug
  wpParent___node___enclosure
  wpParent___node___guid
  wpParent___node___id
  wpParent___node___internal___content
  wpParent___node___internal___contentDigest
  wpParent___node___internal___description
  wpParent___node___internal___fieldOwners
  wpParent___node___internal___ignoreType
  wpParent___node___internal___mediaType
  wpParent___node___internal___owner
  wpParent___node___internal___type
  wpParent___node___link
  wpParent___node___modified
  wpParent___node___modifiedGmt
  wpParent___node___nodeType
  wpParent___node___parent___children
  wpParent___node___parent___id
  wpParent___node___slug
  wpParent___node___status
  wpParent___node___template___templateName
  wpParent___node___uri
}

enum WpPostFieldsEnum {
  authorDatabaseId
  authorId
  author___node___avatar___default
  author___node___avatar___extraAttr
  author___node___avatar___forceDefault
  author___node___avatar___foundAvatar
  author___node___avatar___height
  author___node___avatar___rating
  author___node___avatar___scheme
  author___node___avatar___size
  author___node___avatar___url
  author___node___avatar___width
  author___node___capKey
  author___node___capabilities
  author___node___children
  author___node___children___children
  author___node___children___id
  author___node___comments___nodes
  author___node___databaseId
  author___node___description
  author___node___email
  author___node___extraCapabilities
  author___node___firstName
  author___node___id
  author___node___internal___content
  author___node___internal___contentDigest
  author___node___internal___description
  author___node___internal___fieldOwners
  author___node___internal___ignoreType
  author___node___internal___mediaType
  author___node___internal___owner
  author___node___internal___type
  author___node___lastName
  author___node___locale
  author___node___name
  author___node___nicename
  author___node___nickname
  author___node___nodeType
  author___node___pages___nodes
  author___node___parent___children
  author___node___parent___id
  author___node___posts___nodes
  author___node___registeredDate
  author___node___roles___nodes
  author___node___slug
  author___node___uri
  author___node___url
  author___node___username
  categories___nodes
  categories___nodes___ancestors___nodes
  categories___nodes___children
  categories___nodes___children___children
  categories___nodes___children___id
  categories___nodes___contentNodes___nodes
  categories___nodes___count
  categories___nodes___databaseId
  categories___nodes___description
  categories___nodes___id
  categories___nodes___internal___content
  categories___nodes___internal___contentDigest
  categories___nodes___internal___description
  categories___nodes___internal___fieldOwners
  categories___nodes___internal___ignoreType
  categories___nodes___internal___mediaType
  categories___nodes___internal___owner
  categories___nodes___internal___type
  categories___nodes___link
  categories___nodes___name
  categories___nodes___nodeType
  categories___nodes___parentDatabaseId
  categories___nodes___parentId
  categories___nodes___parent___children
  categories___nodes___parent___id
  categories___nodes___posts___nodes
  categories___nodes___slug
  categories___nodes___termGroupId
  categories___nodes___termTaxonomyId
  categories___nodes___uri
  categories___nodes___wpChildren___nodes
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  commentCount
  commentStatus
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___children
  comments___nodes___children___children
  comments___nodes___children___id
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  comments___nodes___karma
  comments___nodes___nodeType
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___parent___children
  comments___nodes___parent___id
  comments___nodes___replies___nodes
  comments___nodes___type
  content
  contentType___node___archivePath
  contentType___node___canExport
  contentType___node___children
  contentType___node___children___children
  contentType___node___children___id
  contentType___node___connectedTaxonomies___nodes
  contentType___node___contentNodes___nodes
  contentType___node___deleteWithUser
  contentType___node___description
  contentType___node___excludeFromSearch
  contentType___node___graphqlPluralName
  contentType___node___graphqlSingleName
  contentType___node___hasArchive
  contentType___node___hierarchical
  contentType___node___id
  contentType___node___internal___content
  contentType___node___internal___contentDigest
  contentType___node___internal___description
  contentType___node___internal___fieldOwners
  contentType___node___internal___ignoreType
  contentType___node___internal___mediaType
  contentType___node___internal___owner
  contentType___node___internal___type
  contentType___node___isFrontPage
  contentType___node___isPostsPage
  contentType___node___label
  contentType___node___labels___addNew
  contentType___node___labels___addNewItem
  contentType___node___labels___allItems
  contentType___node___labels___archives
  contentType___node___labels___attributes
  contentType___node___labels___editItem
  contentType___node___labels___featuredImage
  contentType___node___labels___filterItemsList
  contentType___node___labels___insertIntoItem
  contentType___node___labels___itemsList
  contentType___node___labels___itemsListNavigation
  contentType___node___labels___menuName
  contentType___node___labels___name
  contentType___node___labels___newItem
  contentType___node___labels___notFound
  contentType___node___labels___notFoundInTrash
  contentType___node___labels___parentItemColon
  contentType___node___labels___removeFeaturedImage
  contentType___node___labels___searchItems
  contentType___node___labels___setFeaturedImage
  contentType___node___labels___singularName
  contentType___node___labels___uploadedToThisItem
  contentType___node___labels___useFeaturedImage
  contentType___node___labels___viewItem
  contentType___node___labels___viewItems
  contentType___node___menuIcon
  contentType___node___menuPosition
  contentType___node___name
  contentType___node___nodeType
  contentType___node___parent___children
  contentType___node___parent___id
  contentType___node___public
  contentType___node___publiclyQueryable
  contentType___node___restBase
  contentType___node___restControllerClass
  contentType___node___showInAdminBar
  contentType___node___showInGraphql
  contentType___node___showInMenu
  contentType___node___showInNavMenus
  contentType___node___showInRest
  contentType___node___showUi
  contentType___node___uri
  databaseId
  date
  dateGmt
  desiredSlug
  enclosure
  excerpt
  featuredImageDatabaseId
  featuredImageId
  featuredImage___node___altText
  featuredImage___node___ancestors___nodes
  featuredImage___node___authorDatabaseId
  featuredImage___node___authorId
  featuredImage___node___caption
  featuredImage___node___children
  featuredImage___node___children___children
  featuredImage___node___children___id
  featuredImage___node___commentCount
  featuredImage___node___commentStatus
  featuredImage___node___comments___nodes
  featuredImage___node___databaseId
  featuredImage___node___date
  featuredImage___node___dateGmt
  featuredImage___node___description
  featuredImage___node___desiredSlug
  featuredImage___node___enclosure
  featuredImage___node___fileSize
  featuredImage___node___guid
  featuredImage___node___id
  featuredImage___node___internal___content
  featuredImage___node___internal___contentDigest
  featuredImage___node___internal___description
  featuredImage___node___internal___fieldOwners
  featuredImage___node___internal___ignoreType
  featuredImage___node___internal___mediaType
  featuredImage___node___internal___owner
  featuredImage___node___internal___type
  featuredImage___node___link
  featuredImage___node___localFile___absolutePath
  featuredImage___node___localFile___accessTime
  featuredImage___node___localFile___atime
  featuredImage___node___localFile___atimeMs
  featuredImage___node___localFile___base
  featuredImage___node___localFile___birthTime
  featuredImage___node___localFile___birthtime
  featuredImage___node___localFile___birthtimeMs
  featuredImage___node___localFile___blksize
  featuredImage___node___localFile___blocks
  featuredImage___node___localFile___changeTime
  featuredImage___node___localFile___children
  featuredImage___node___localFile___childrenImageSharp
  featuredImage___node___localFile___ctime
  featuredImage___node___localFile___ctimeMs
  featuredImage___node___localFile___dev
  featuredImage___node___localFile___dir
  featuredImage___node___localFile___ext
  featuredImage___node___localFile___extension
  featuredImage___node___localFile___gid
  featuredImage___node___localFile___hash
  featuredImage___node___localFile___id
  featuredImage___node___localFile___ino
  featuredImage___node___localFile___mode
  featuredImage___node___localFile___modifiedTime
  featuredImage___node___localFile___mtime
  featuredImage___node___localFile___mtimeMs
  featuredImage___node___localFile___name
  featuredImage___node___localFile___nlink
  featuredImage___node___localFile___prettySize
  featuredImage___node___localFile___publicURL
  featuredImage___node___localFile___rdev
  featuredImage___node___localFile___relativeDirectory
  featuredImage___node___localFile___relativePath
  featuredImage___node___localFile___root
  featuredImage___node___localFile___size
  featuredImage___node___localFile___sourceInstanceName
  featuredImage___node___localFile___uid
  featuredImage___node___mediaDetails___file
  featuredImage___node___mediaDetails___height
  featuredImage___node___mediaDetails___sizes
  featuredImage___node___mediaDetails___width
  featuredImage___node___mediaItemUrl
  featuredImage___node___mediaType
  featuredImage___node___mimeType
  featuredImage___node___modified
  featuredImage___node___modifiedGmt
  featuredImage___node___nodeType
  featuredImage___node___parentDatabaseId
  featuredImage___node___parentId
  featuredImage___node___parent___children
  featuredImage___node___parent___id
  featuredImage___node___remoteFile___absolutePath
  featuredImage___node___remoteFile___accessTime
  featuredImage___node___remoteFile___atime
  featuredImage___node___remoteFile___atimeMs
  featuredImage___node___remoteFile___base
  featuredImage___node___remoteFile___birthTime
  featuredImage___node___remoteFile___birthtime
  featuredImage___node___remoteFile___birthtimeMs
  featuredImage___node___remoteFile___blksize
  featuredImage___node___remoteFile___blocks
  featuredImage___node___remoteFile___changeTime
  featuredImage___node___remoteFile___children
  featuredImage___node___remoteFile___childrenImageSharp
  featuredImage___node___remoteFile___ctime
  featuredImage___node___remoteFile___ctimeMs
  featuredImage___node___remoteFile___dev
  featuredImage___node___remoteFile___dir
  featuredImage___node___remoteFile___ext
  featuredImage___node___remoteFile___extension
  featuredImage___node___remoteFile___gid
  featuredImage___node___remoteFile___hash
  featuredImage___node___remoteFile___id
  featuredImage___node___remoteFile___ino
  featuredImage___node___remoteFile___mode
  featuredImage___node___remoteFile___modifiedTime
  featuredImage___node___remoteFile___mtime
  featuredImage___node___remoteFile___mtimeMs
  featuredImage___node___remoteFile___name
  featuredImage___node___remoteFile___nlink
  featuredImage___node___remoteFile___prettySize
  featuredImage___node___remoteFile___publicURL
  featuredImage___node___remoteFile___rdev
  featuredImage___node___remoteFile___relativeDirectory
  featuredImage___node___remoteFile___relativePath
  featuredImage___node___remoteFile___root
  featuredImage___node___remoteFile___size
  featuredImage___node___remoteFile___sourceInstanceName
  featuredImage___node___remoteFile___uid
  featuredImage___node___sizes
  featuredImage___node___slug
  featuredImage___node___sourceUrl
  featuredImage___node___srcSet
  featuredImage___node___status
  featuredImage___node___template___templateName
  featuredImage___node___title
  featuredImage___node___uri
  featuredImage___node___wpChildren___nodes
  guid
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isRevision
  isSticky
  lastEditedBy___node___avatar___default
  lastEditedBy___node___avatar___extraAttr
  lastEditedBy___node___avatar___forceDefault
  lastEditedBy___node___avatar___foundAvatar
  lastEditedBy___node___avatar___height
  lastEditedBy___node___avatar___rating
  lastEditedBy___node___avatar___scheme
  lastEditedBy___node___avatar___size
  lastEditedBy___node___avatar___url
  lastEditedBy___node___avatar___width
  lastEditedBy___node___capKey
  lastEditedBy___node___capabilities
  lastEditedBy___node___children
  lastEditedBy___node___children___children
  lastEditedBy___node___children___id
  lastEditedBy___node___comments___nodes
  lastEditedBy___node___databaseId
  lastEditedBy___node___description
  lastEditedBy___node___email
  lastEditedBy___node___extraCapabilities
  lastEditedBy___node___firstName
  lastEditedBy___node___id
  lastEditedBy___node___internal___content
  lastEditedBy___node___internal___contentDigest
  lastEditedBy___node___internal___description
  lastEditedBy___node___internal___fieldOwners
  lastEditedBy___node___internal___ignoreType
  lastEditedBy___node___internal___mediaType
  lastEditedBy___node___internal___owner
  lastEditedBy___node___internal___type
  lastEditedBy___node___lastName
  lastEditedBy___node___locale
  lastEditedBy___node___name
  lastEditedBy___node___nicename
  lastEditedBy___node___nickname
  lastEditedBy___node___nodeType
  lastEditedBy___node___pages___nodes
  lastEditedBy___node___parent___children
  lastEditedBy___node___parent___id
  lastEditedBy___node___posts___nodes
  lastEditedBy___node___registeredDate
  lastEditedBy___node___roles___nodes
  lastEditedBy___node___slug
  lastEditedBy___node___uri
  lastEditedBy___node___url
  lastEditedBy___node___username
  link
  modified
  modifiedGmt
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pingStatus
  pinged
  postFormats___nodes
  postFormats___nodes___children
  postFormats___nodes___children___children
  postFormats___nodes___children___id
  postFormats___nodes___contentNodes___nodes
  postFormats___nodes___count
  postFormats___nodes___databaseId
  postFormats___nodes___description
  postFormats___nodes___id
  postFormats___nodes___internal___content
  postFormats___nodes___internal___contentDigest
  postFormats___nodes___internal___description
  postFormats___nodes___internal___fieldOwners
  postFormats___nodes___internal___ignoreType
  postFormats___nodes___internal___mediaType
  postFormats___nodes___internal___owner
  postFormats___nodes___internal___type
  postFormats___nodes___link
  postFormats___nodes___name
  postFormats___nodes___nodeType
  postFormats___nodes___parent___children
  postFormats___nodes___parent___id
  postFormats___nodes___posts___nodes
  postFormats___nodes___slug
  postFormats___nodes___termGroupId
  postFormats___nodes___termTaxonomyId
  postFormats___nodes___uri
  slug
  status
  tags___nodes
  tags___nodes___children
  tags___nodes___children___children
  tags___nodes___children___id
  tags___nodes___contentNodes___nodes
  tags___nodes___count
  tags___nodes___databaseId
  tags___nodes___description
  tags___nodes___id
  tags___nodes___internal___content
  tags___nodes___internal___contentDigest
  tags___nodes___internal___description
  tags___nodes___internal___fieldOwners
  tags___nodes___internal___ignoreType
  tags___nodes___internal___mediaType
  tags___nodes___internal___owner
  tags___nodes___internal___type
  tags___nodes___link
  tags___nodes___name
  tags___nodes___nodeType
  tags___nodes___parent___children
  tags___nodes___parent___id
  tags___nodes___posts___nodes
  tags___nodes___slug
  tags___nodes___termGroupId
  tags___nodes___termTaxonomyId
  tags___nodes___uri
  template___templateName
  terms___nodes
  terms___nodes___children
  terms___nodes___children___children
  terms___nodes___children___id
  terms___nodes___count
  terms___nodes___databaseId
  terms___nodes___description
  terms___nodes___id
  terms___nodes___internal___content
  terms___nodes___internal___contentDigest
  terms___nodes___internal___description
  terms___nodes___internal___fieldOwners
  terms___nodes___internal___ignoreType
  terms___nodes___internal___mediaType
  terms___nodes___internal___owner
  terms___nodes___internal___type
  terms___nodes___link
  terms___nodes___name
  terms___nodes___nodeType
  terms___nodes___parent___children
  terms___nodes___parent___id
  terms___nodes___slug
  terms___nodes___termGroupId
  terms___nodes___termTaxonomyId
  terms___nodes___uri
  title
  toPing
  uri
}

enum WpPostFormatFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentNodes___nodes
  contentNodes___nodes___children
  contentNodes___nodes___children___children
  contentNodes___nodes___children___id
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___children
  contentNodes___nodes___parent___id
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  count
  databaseId
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  link
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___children
  posts___nodes___children___children
  posts___nodes___children___id
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___nodeType
  posts___nodes___parent___children
  posts___nodes___parent___id
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  slug
  taxonomy___node___archivePath
  taxonomy___node___children
  taxonomy___node___children___children
  taxonomy___node___children___id
  taxonomy___node___connectedContentTypes___nodes
  taxonomy___node___description
  taxonomy___node___graphqlPluralName
  taxonomy___node___graphqlSingleName
  taxonomy___node___hierarchical
  taxonomy___node___id
  taxonomy___node___internal___content
  taxonomy___node___internal___contentDigest
  taxonomy___node___internal___description
  taxonomy___node___internal___fieldOwners
  taxonomy___node___internal___ignoreType
  taxonomy___node___internal___mediaType
  taxonomy___node___internal___owner
  taxonomy___node___internal___type
  taxonomy___node___label
  taxonomy___node___name
  taxonomy___node___nodeType
  taxonomy___node___parent___children
  taxonomy___node___parent___id
  taxonomy___node___public
  taxonomy___node___restBase
  taxonomy___node___restControllerClass
  taxonomy___node___showCloud
  taxonomy___node___showInAdminColumn
  taxonomy___node___showInGraphql
  taxonomy___node___showInMenu
  taxonomy___node___showInNavMenus
  taxonomy___node___showInQuickEdit
  taxonomy___node___showInRest
  taxonomy___node___showUi
  termGroupId
  termTaxonomyId
  uri
}

enum WpTagFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentNodes___nodes
  contentNodes___nodes___children
  contentNodes___nodes___children___children
  contentNodes___nodes___children___id
  contentNodes___nodes___databaseId
  contentNodes___nodes___date
  contentNodes___nodes___dateGmt
  contentNodes___nodes___desiredSlug
  contentNodes___nodes___enclosure
  contentNodes___nodes___guid
  contentNodes___nodes___id
  contentNodes___nodes___internal___content
  contentNodes___nodes___internal___contentDigest
  contentNodes___nodes___internal___description
  contentNodes___nodes___internal___fieldOwners
  contentNodes___nodes___internal___ignoreType
  contentNodes___nodes___internal___mediaType
  contentNodes___nodes___internal___owner
  contentNodes___nodes___internal___type
  contentNodes___nodes___link
  contentNodes___nodes___modified
  contentNodes___nodes___modifiedGmt
  contentNodes___nodes___nodeType
  contentNodes___nodes___parent___children
  contentNodes___nodes___parent___id
  contentNodes___nodes___slug
  contentNodes___nodes___status
  contentNodes___nodes___template___templateName
  contentNodes___nodes___uri
  count
  databaseId
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  link
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___children
  posts___nodes___children___children
  posts___nodes___children___id
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___nodeType
  posts___nodes___parent___children
  posts___nodes___parent___id
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  slug
  taxonomy___node___archivePath
  taxonomy___node___children
  taxonomy___node___children___children
  taxonomy___node___children___id
  taxonomy___node___connectedContentTypes___nodes
  taxonomy___node___description
  taxonomy___node___graphqlPluralName
  taxonomy___node___graphqlSingleName
  taxonomy___node___hierarchical
  taxonomy___node___id
  taxonomy___node___internal___content
  taxonomy___node___internal___contentDigest
  taxonomy___node___internal___description
  taxonomy___node___internal___fieldOwners
  taxonomy___node___internal___ignoreType
  taxonomy___node___internal___mediaType
  taxonomy___node___internal___owner
  taxonomy___node___internal___type
  taxonomy___node___label
  taxonomy___node___name
  taxonomy___node___nodeType
  taxonomy___node___parent___children
  taxonomy___node___parent___id
  taxonomy___node___public
  taxonomy___node___restBase
  taxonomy___node___restControllerClass
  taxonomy___node___showCloud
  taxonomy___node___showInAdminColumn
  taxonomy___node___showInGraphql
  taxonomy___node___showInMenu
  taxonomy___node___showInNavMenus
  taxonomy___node___showInQuickEdit
  taxonomy___node___showInRest
  taxonomy___node___showUi
  termGroupId
  termTaxonomyId
  uri
}

enum WpTaxonomyFieldsEnum {
  archivePath
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  connectedContentTypes___nodes
  connectedContentTypes___nodes___archivePath
  connectedContentTypes___nodes___canExport
  connectedContentTypes___nodes___children
  connectedContentTypes___nodes___children___children
  connectedContentTypes___nodes___children___id
  connectedContentTypes___nodes___connectedTaxonomies___nodes
  connectedContentTypes___nodes___contentNodes___nodes
  connectedContentTypes___nodes___deleteWithUser
  connectedContentTypes___nodes___description
  connectedContentTypes___nodes___excludeFromSearch
  connectedContentTypes___nodes___graphqlPluralName
  connectedContentTypes___nodes___graphqlSingleName
  connectedContentTypes___nodes___hasArchive
  connectedContentTypes___nodes___hierarchical
  connectedContentTypes___nodes___id
  connectedContentTypes___nodes___internal___content
  connectedContentTypes___nodes___internal___contentDigest
  connectedContentTypes___nodes___internal___description
  connectedContentTypes___nodes___internal___fieldOwners
  connectedContentTypes___nodes___internal___ignoreType
  connectedContentTypes___nodes___internal___mediaType
  connectedContentTypes___nodes___internal___owner
  connectedContentTypes___nodes___internal___type
  connectedContentTypes___nodes___isFrontPage
  connectedContentTypes___nodes___isPostsPage
  connectedContentTypes___nodes___label
  connectedContentTypes___nodes___labels___addNew
  connectedContentTypes___nodes___labels___addNewItem
  connectedContentTypes___nodes___labels___allItems
  connectedContentTypes___nodes___labels___archives
  connectedContentTypes___nodes___labels___attributes
  connectedContentTypes___nodes___labels___editItem
  connectedContentTypes___nodes___labels___featuredImage
  connectedContentTypes___nodes___labels___filterItemsList
  connectedContentTypes___nodes___labels___insertIntoItem
  connectedContentTypes___nodes___labels___itemsList
  connectedContentTypes___nodes___labels___itemsListNavigation
  connectedContentTypes___nodes___labels___menuName
  connectedContentTypes___nodes___labels___name
  connectedContentTypes___nodes___labels___newItem
  connectedContentTypes___nodes___labels___notFound
  connectedContentTypes___nodes___labels___notFoundInTrash
  connectedContentTypes___nodes___labels___parentItemColon
  connectedContentTypes___nodes___labels___removeFeaturedImage
  connectedContentTypes___nodes___labels___searchItems
  connectedContentTypes___nodes___labels___setFeaturedImage
  connectedContentTypes___nodes___labels___singularName
  connectedContentTypes___nodes___labels___uploadedToThisItem
  connectedContentTypes___nodes___labels___useFeaturedImage
  connectedContentTypes___nodes___labels___viewItem
  connectedContentTypes___nodes___labels___viewItems
  connectedContentTypes___nodes___menuIcon
  connectedContentTypes___nodes___menuPosition
  connectedContentTypes___nodes___name
  connectedContentTypes___nodes___nodeType
  connectedContentTypes___nodes___parent___children
  connectedContentTypes___nodes___parent___id
  connectedContentTypes___nodes___public
  connectedContentTypes___nodes___publiclyQueryable
  connectedContentTypes___nodes___restBase
  connectedContentTypes___nodes___restControllerClass
  connectedContentTypes___nodes___showInAdminBar
  connectedContentTypes___nodes___showInGraphql
  connectedContentTypes___nodes___showInMenu
  connectedContentTypes___nodes___showInNavMenus
  connectedContentTypes___nodes___showInRest
  connectedContentTypes___nodes___showUi
  connectedContentTypes___nodes___uri
  description
  graphqlPluralName
  graphqlSingleName
  hierarchical
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  label
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  public
  restBase
  restControllerClass
  showCloud
  showInAdminColumn
  showInGraphql
  showInMenu
  showInNavMenus
  showInQuickEdit
  showInRest
  showUi
}

enum WpTermNodeFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  count
  databaseId
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  link
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  slug
  termGroupId
  termTaxonomyId
  uri
}

enum WpUserFieldsEnum {
  avatar___default
  avatar___extraAttr
  avatar___forceDefault
  avatar___foundAvatar
  avatar___height
  avatar___rating
  avatar___scheme
  avatar___size
  avatar___url
  avatar___width
  capKey
  capabilities
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  comments___nodes
  comments___nodes___agent
  comments___nodes___approved
  comments___nodes___authorIp
  comments___nodes___children
  comments___nodes___children___children
  comments___nodes___children___id
  comments___nodes___content
  comments___nodes___databaseId
  comments___nodes___date
  comments___nodes___dateGmt
  comments___nodes___id
  comments___nodes___internal___content
  comments___nodes___internal___contentDigest
  comments___nodes___internal___description
  comments___nodes___internal___fieldOwners
  comments___nodes___internal___ignoreType
  comments___nodes___internal___mediaType
  comments___nodes___internal___owner
  comments___nodes___internal___type
  comments___nodes___karma
  comments___nodes___nodeType
  comments___nodes___parentDatabaseId
  comments___nodes___parentId
  comments___nodes___parent___children
  comments___nodes___parent___id
  comments___nodes___replies___nodes
  comments___nodes___type
  databaseId
  description
  email
  extraCapabilities
  firstName
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  lastName
  locale
  name
  nicename
  nickname
  nodeType
  pages___nodes
  pages___nodes___ancestors___nodes
  pages___nodes___authorDatabaseId
  pages___nodes___authorId
  pages___nodes___children
  pages___nodes___children___children
  pages___nodes___children___id
  pages___nodes___commentCount
  pages___nodes___commentStatus
  pages___nodes___comments___nodes
  pages___nodes___content
  pages___nodes___databaseId
  pages___nodes___date
  pages___nodes___dateGmt
  pages___nodes___desiredSlug
  pages___nodes___enclosure
  pages___nodes___featuredImageDatabaseId
  pages___nodes___featuredImageId
  pages___nodes___guid
  pages___nodes___id
  pages___nodes___internal___content
  pages___nodes___internal___contentDigest
  pages___nodes___internal___description
  pages___nodes___internal___fieldOwners
  pages___nodes___internal___ignoreType
  pages___nodes___internal___mediaType
  pages___nodes___internal___owner
  pages___nodes___internal___type
  pages___nodes___isFrontPage
  pages___nodes___isPostsPage
  pages___nodes___isPrivacyPage
  pages___nodes___isRevision
  pages___nodes___link
  pages___nodes___menuOrder
  pages___nodes___modified
  pages___nodes___modifiedGmt
  pages___nodes___nodeType
  pages___nodes___parentDatabaseId
  pages___nodes___parentId
  pages___nodes___parent___children
  pages___nodes___parent___id
  pages___nodes___slug
  pages___nodes___status
  pages___nodes___template___templateName
  pages___nodes___title
  pages___nodes___uri
  pages___nodes___wpChildren___nodes
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  posts___nodes
  posts___nodes___authorDatabaseId
  posts___nodes___authorId
  posts___nodes___categories___nodes
  posts___nodes___children
  posts___nodes___children___children
  posts___nodes___children___id
  posts___nodes___commentCount
  posts___nodes___commentStatus
  posts___nodes___comments___nodes
  posts___nodes___content
  posts___nodes___databaseId
  posts___nodes___date
  posts___nodes___dateGmt
  posts___nodes___desiredSlug
  posts___nodes___enclosure
  posts___nodes___excerpt
  posts___nodes___featuredImageDatabaseId
  posts___nodes___featuredImageId
  posts___nodes___guid
  posts___nodes___id
  posts___nodes___internal___content
  posts___nodes___internal___contentDigest
  posts___nodes___internal___description
  posts___nodes___internal___fieldOwners
  posts___nodes___internal___ignoreType
  posts___nodes___internal___mediaType
  posts___nodes___internal___owner
  posts___nodes___internal___type
  posts___nodes___isRevision
  posts___nodes___isSticky
  posts___nodes___link
  posts___nodes___modified
  posts___nodes___modifiedGmt
  posts___nodes___nodeType
  posts___nodes___parent___children
  posts___nodes___parent___id
  posts___nodes___pingStatus
  posts___nodes___pinged
  posts___nodes___postFormats___nodes
  posts___nodes___slug
  posts___nodes___status
  posts___nodes___tags___nodes
  posts___nodes___template___templateName
  posts___nodes___terms___nodes
  posts___nodes___title
  posts___nodes___toPing
  posts___nodes___uri
  registeredDate
  roles___nodes
  roles___nodes___capabilities
  roles___nodes___children
  roles___nodes___children___children
  roles___nodes___children___id
  roles___nodes___displayName
  roles___nodes___id
  roles___nodes___internal___content
  roles___nodes___internal___contentDigest
  roles___nodes___internal___description
  roles___nodes___internal___fieldOwners
  roles___nodes___internal___ignoreType
  roles___nodes___internal___mediaType
  roles___nodes___internal___owner
  roles___nodes___internal___type
  roles___nodes___name
  roles___nodes___nodeType
  roles___nodes___parent___children
  roles___nodes___parent___id
  slug
  uri
  url
  username
}

enum WpUserRoleFieldsEnum {
  capabilities
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  displayName
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeType
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

input AVIFOptions {
  lossless: Boolean
  quality: Int
  speed: Int
}

input BlurredOptions {
  "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
  toFormat: ImageFormat
  "Width of the generated low-res preview. Default is 20px"
  width: Int
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  children: NodeFilterListInput
  childrenImageSharp: ImageSharpFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  hash: StringQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input IDQueryOperatorInput {
  eq: ID
  in: [ID]
  ne: ID
  nin: [ID]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JPGOptions {
  progressive: Boolean = true
  quality: Int
}

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input PNGOptions {
  compressionSpeed: Int = 4
  quality: Int
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageContextFilterInput {
  archivePath: StringQueryOperatorInput
  archiveType: StringQueryOperatorInput
  categoryDatabaseId: IntQueryOperatorInput
  firstId: StringQueryOperatorInput
  id: StringQueryOperatorInput
  nextPage: StringQueryOperatorInput
  offset: IntQueryOperatorInput
  pageNumber: IntQueryOperatorInput
  perPage: IntQueryOperatorInput
  previousPage: StringQueryOperatorInput
  totalPages: IntQueryOperatorInput
  uri: StringQueryOperatorInput
  userDatabaseId: IntQueryOperatorInput
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  context: SitePageContextFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  matchPath: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  description: StringQueryOperatorInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  keywords: StringQueryOperatorInput
  license: StringQueryOperatorInput
  main: StringQueryOperatorInput
  name: StringQueryOperatorInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsDebugFilterInput {
  disableCompatibilityCheck: BooleanQueryOperatorInput
  graphql: SitePluginPluginOptionsDebugGraphqlFilterInput
  preview: BooleanQueryOperatorInput
  throwRefetchErrors: BooleanQueryOperatorInput
  timeBuildSteps: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsDebugGraphqlFilterInput {
  copyNodeSourcingQueryAndExit: BooleanQueryOperatorInput
  copyQueryOnError: BooleanQueryOperatorInput
  onlyReportCriticalErrors: BooleanQueryOperatorInput
  panicOnError: BooleanQueryOperatorInput
  printIntrospectionDiff: BooleanQueryOperatorInput
  showQueryOnError: BooleanQueryOperatorInput
  showQueryVarsOnError: BooleanQueryOperatorInput
  writeQueriesToDisk: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsDevelopFilterInput {
  hardCacheData: BooleanQueryOperatorInput
  hardCacheMediaFiles: BooleanQueryOperatorInput
  nodeUpdateInterval: IntQueryOperatorInput
}

input SitePluginPluginOptionsFilterInput {
  allExtensions: BooleanQueryOperatorInput
  base64Width: IntQueryOperatorInput
  debug: SitePluginPluginOptionsDebugFilterInput
  defaultQuality: IntQueryOperatorInput
  develop: SitePluginPluginOptionsDevelopFilterInput
  excludeFieldNames: StringQueryOperatorInput
  failOnError: BooleanQueryOperatorInput
  html: SitePluginPluginOptionsHtmlFilterInput
  isTSX: BooleanQueryOperatorInput
  jsxPragma: StringQueryOperatorInput
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  stripMetadata: BooleanQueryOperatorInput
  type: SitePluginPluginOptionsTypeFilterInput
  url: StringQueryOperatorInput
  verbose: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsHtmlFilterInput {
  createStaticFiles: BooleanQueryOperatorInput
  fallbackImageMaxWidth: IntQueryOperatorInput
  imageQuality: IntQueryOperatorInput
  useGatsbyImage: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsTypeCoreParagraphBlockAttributesV2FilterInput {
  exclude: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsTypeFilterInput {
  CoreParagraphBlockAttributesV2: SitePluginPluginOptionsTypeCoreParagraphBlockAttributesV2FilterInput
  Post: SitePluginPluginOptionsTypePostFilterInput
  RootQuery: StringQueryOperatorInput
}

input SitePluginPluginOptionsTypePostFilterInput {
  limit: IntQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  author: StringQueryOperatorInput
  description: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}

input TransformOptions {
  cropFocus: ImageCropFocus = ATTENTION
  duotone: DuotoneGradient
  fit: ImageFit = COVER
  grayscale: Boolean = false
  rotate: Int = 0
  trim: Float = 0.0
}

input WebPOptions {
  quality: Int
}

input WpAvatarFilterInput {
  default: StringQueryOperatorInput
  extraAttr: StringQueryOperatorInput
  forceDefault: BooleanQueryOperatorInput
  foundAvatar: BooleanQueryOperatorInput
  height: IntQueryOperatorInput
  rating: StringQueryOperatorInput
  scheme: StringQueryOperatorInput
  size: IntQueryOperatorInput
  url: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input WpCategoryFilterInput {
  ancestors: WpCategoryToAncestorsCategoryConnectionFilterInput
  children: NodeFilterListInput
  contentNodes: WpCategoryToContentNodeConnectionFilterInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  posts: WpCategoryToPostConnectionFilterInput
  slug: StringQueryOperatorInput
  taxonomy: WpCategoryToTaxonomyConnectionEdgeFilterInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
  wpChildren: WpCategoryToCategoryConnectionFilterInput
  wpParent: WpCategoryToParentCategoryConnectionEdgeFilterInput
}

input WpCategoryFilterListInput {
  elemMatch: WpCategoryFilterInput
}

input WpCategorySortInput {
  fields: [WpCategoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpCategoryToAncestorsCategoryConnectionFilterInput {
  nodes: WpCategoryFilterListInput
}

input WpCategoryToCategoryConnectionFilterInput {
  nodes: WpCategoryFilterListInput
}

input WpCategoryToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpCategoryToParentCategoryConnectionEdgeFilterInput {
  node: WpCategoryFilterInput
}

input WpCategoryToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpCategoryToTaxonomyConnectionEdgeFilterInput {
  node: WpTaxonomyFilterInput
}

input WpCommentAuthorFilterInput {
  children: NodeFilterListInput
  databaseId: IntQueryOperatorInput
  email: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  url: StringQueryOperatorInput
}

input WpCommentAuthorSortInput {
  fields: [WpCommentAuthorFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpCommentFilterInput {
  agent: StringQueryOperatorInput
  approved: BooleanQueryOperatorInput
  author: WpCommentToCommenterConnectionEdgeFilterInput
  authorIp: StringQueryOperatorInput
  children: NodeFilterListInput
  commentedOn: WpCommentToContentNodeConnectionEdgeFilterInput
  content: StringQueryOperatorInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  karma: IntQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  replies: WpCommentToCommentConnectionFilterInput
  type: StringQueryOperatorInput
  wpParent: WpCommentToParentCommentConnectionEdgeFilterInput
}

input WpCommentFilterListInput {
  elemMatch: WpCommentFilterInput
}

input WpCommentSortInput {
  fields: [WpCommentFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpCommentToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpCommentToCommenterConnectionEdgeFilterInput {
  node: WpCommenterFilterInput
}

input WpCommentToContentNodeConnectionEdgeFilterInput {
  node: WpContentNodeFilterInput
}

input WpCommentToParentCommentConnectionEdgeFilterInput {
  node: WpCommentFilterInput
}

input WpCommenterFilterInput {
  databaseId: IntQueryOperatorInput
  email: StringQueryOperatorInput
  id: IDQueryOperatorInput
  name: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input WpContentNodeFilterInput {
  children: NodeFilterListInput
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  slug: StringQueryOperatorInput
  status: StringQueryOperatorInput
  template: WpContentTemplateFilterInput
  uri: StringQueryOperatorInput
}

input WpContentNodeFilterListInput {
  elemMatch: WpContentNodeFilterInput
}

input WpContentNodeSortInput {
  fields: [WpContentNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpContentNodeToContentTypeConnectionEdgeFilterInput {
  node: WpContentTypeFilterInput
}

input WpContentNodeToEditLastConnectionEdgeFilterInput {
  node: WpUserFilterInput
}

input WpContentTemplateFilterInput {
  templateName: StringQueryOperatorInput
}

input WpContentTypeFilterInput {
  archivePath: StringQueryOperatorInput
  canExport: BooleanQueryOperatorInput
  children: NodeFilterListInput
  connectedTaxonomies: WpContentTypeToTaxonomyConnectionFilterInput
  contentNodes: WpContentTypeToContentNodeConnectionFilterInput
  deleteWithUser: BooleanQueryOperatorInput
  description: StringQueryOperatorInput
  excludeFromSearch: BooleanQueryOperatorInput
  graphqlPluralName: StringQueryOperatorInput
  graphqlSingleName: StringQueryOperatorInput
  hasArchive: BooleanQueryOperatorInput
  hierarchical: BooleanQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  isFrontPage: BooleanQueryOperatorInput
  isPostsPage: BooleanQueryOperatorInput
  label: StringQueryOperatorInput
  labels: WpPostTypeLabelDetailsFilterInput
  menuIcon: StringQueryOperatorInput
  menuPosition: IntQueryOperatorInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  public: BooleanQueryOperatorInput
  publiclyQueryable: BooleanQueryOperatorInput
  restBase: StringQueryOperatorInput
  restControllerClass: StringQueryOperatorInput
  showInAdminBar: BooleanQueryOperatorInput
  showInGraphql: BooleanQueryOperatorInput
  showInMenu: BooleanQueryOperatorInput
  showInNavMenus: BooleanQueryOperatorInput
  showInRest: BooleanQueryOperatorInput
  showUi: BooleanQueryOperatorInput
  uri: StringQueryOperatorInput
}

input WpContentTypeFilterListInput {
  elemMatch: WpContentTypeFilterInput
}

input WpContentTypeSortInput {
  fields: [WpContentTypeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpContentTypeToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpContentTypeToTaxonomyConnectionFilterInput {
  nodes: WpTaxonomyFilterListInput
}

input WpDiscussionSettingsFilterInput {
  defaultCommentStatus: StringQueryOperatorInput
  defaultPingStatus: StringQueryOperatorInput
}

input WpFilterInput {
  allSettings: WpSettingsFilterInput
  children: NodeFilterListInput
  discussionSettings: WpDiscussionSettingsFilterInput
  generalSettings: WpGeneralSettingsFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  readingSettings: WpReadingSettingsFilterInput
  schemaMd5: StringQueryOperatorInput
  viewer: WpUserFilterInput
  wpGatsby: WpWPGatsbyFilterInput
  writingSettings: WpWritingSettingsFilterInput
}

input WpGeneralSettingsFilterInput {
  dateFormat: StringQueryOperatorInput
  description: StringQueryOperatorInput
  email: StringQueryOperatorInput
  language: StringQueryOperatorInput
  startOfWeek: IntQueryOperatorInput
  timeFormat: StringQueryOperatorInput
  timezone: StringQueryOperatorInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput {
  node: WpContentNodeFilterInput
}

input WpMediaDetailsFilterInput {
  file: StringQueryOperatorInput
  height: IntQueryOperatorInput
  meta: WpMediaItemMetaFilterInput
  sizes: WpMediaSizeFilterListInput
  width: IntQueryOperatorInput
}

input WpMediaItemFilterInput {
  altText: StringQueryOperatorInput
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput
  author: WpNodeWithAuthorToUserConnectionEdgeFilterInput
  authorDatabaseId: IntQueryOperatorInput
  authorId: IDQueryOperatorInput
  caption: StringQueryOperatorInput
  children: NodeFilterListInput
  commentCount: IntQueryOperatorInput
  commentStatus: StringQueryOperatorInput
  comments: WpMediaItemToCommentConnectionFilterInput
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  description: StringQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  fileSize: IntQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  localFile: FileFilterInput
  mediaDetails: WpMediaDetailsFilterInput
  mediaItemUrl: StringQueryOperatorInput
  mediaType: StringQueryOperatorInput
  mimeType: StringQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  remoteFile: FileFilterInput
  sizes: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  sourceUrl: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  status: StringQueryOperatorInput
  template: WpContentTemplateFilterInput
  title: StringQueryOperatorInput
  uri: StringQueryOperatorInput
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput
}

input WpMediaItemMetaFilterInput {
  aperture: FloatQueryOperatorInput
  camera: StringQueryOperatorInput
  caption: StringQueryOperatorInput
  copyright: StringQueryOperatorInput
  createdTimestamp: IntQueryOperatorInput
  credit: StringQueryOperatorInput
  focalLength: FloatQueryOperatorInput
  iso: IntQueryOperatorInput
  keywords: StringQueryOperatorInput
  orientation: StringQueryOperatorInput
  shutterSpeed: FloatQueryOperatorInput
  title: StringQueryOperatorInput
}

input WpMediaItemSortInput {
  fields: [WpMediaItemFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpMediaItemToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpMediaSizeFilterInput {
  file: StringQueryOperatorInput
  fileSize: IntQueryOperatorInput
  height: StringQueryOperatorInput
  mimeType: StringQueryOperatorInput
  name: StringQueryOperatorInput
  sourceUrl: StringQueryOperatorInput
  width: StringQueryOperatorInput
}

input WpMediaSizeFilterListInput {
  elemMatch: WpMediaSizeFilterInput
}

input WpMenuFilterInput {
  children: NodeFilterListInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  locations: WpMenuLocationEnumQueryOperatorInput
  menuItems: WpMenuToMenuItemConnectionFilterInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  slug: StringQueryOperatorInput
}

input WpMenuItemFilterInput {
  childItems: WpMenuItemToMenuItemConnectionFilterInput
  children: NodeFilterListInput
  connectedNode: WpMenuItemToMenuItemLinkableConnectionEdgeFilterInput
  cssClasses: StringQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  label: StringQueryOperatorInput
  linkRelationship: StringQueryOperatorInput
  locations: WpMenuLocationEnumQueryOperatorInput
  menu: WpMenuItemToMenuConnectionEdgeFilterInput
  nodeType: StringQueryOperatorInput
  order: IntQueryOperatorInput
  parent: NodeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  path: StringQueryOperatorInput
  target: StringQueryOperatorInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input WpMenuItemFilterListInput {
  elemMatch: WpMenuItemFilterInput
}

input WpMenuItemLinkableFilterInput {
  databaseId: IntQueryOperatorInput
  id: IDQueryOperatorInput
  uri: StringQueryOperatorInput
}

input WpMenuItemSortInput {
  fields: [WpMenuItemFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpMenuItemToMenuConnectionEdgeFilterInput {
  node: WpMenuFilterInput
}

input WpMenuItemToMenuItemConnectionFilterInput {
  nodes: WpMenuItemFilterListInput
}

input WpMenuItemToMenuItemLinkableConnectionEdgeFilterInput {
  node: WpMenuItemLinkableFilterInput
}

input WpMenuLocationEnumQueryOperatorInput {
  eq: WpMenuLocationEnum
  in: [WpMenuLocationEnum]
  ne: WpMenuLocationEnum
  nin: [WpMenuLocationEnum]
}

input WpMenuSortInput {
  fields: [WpMenuFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpMenuToMenuItemConnectionFilterInput {
  nodes: WpMenuItemFilterListInput
}

input WpNodeWithAuthorToUserConnectionEdgeFilterInput {
  node: WpUserFilterInput
}

input WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput {
  node: WpMediaItemFilterInput
}

input WpPageFilterInput {
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnectionFilterInput
  author: WpNodeWithAuthorToUserConnectionEdgeFilterInput
  authorDatabaseId: IntQueryOperatorInput
  authorId: IDQueryOperatorInput
  children: NodeFilterListInput
  commentCount: IntQueryOperatorInput
  commentStatus: StringQueryOperatorInput
  comments: WpPageToCommentConnectionFilterInput
  content: StringQueryOperatorInput
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput
  featuredImageDatabaseId: IntQueryOperatorInput
  featuredImageId: IDQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  isFrontPage: BooleanQueryOperatorInput
  isPostsPage: BooleanQueryOperatorInput
  isPrivacyPage: BooleanQueryOperatorInput
  isRevision: BooleanQueryOperatorInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  menuOrder: IntQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  parentDatabaseId: IntQueryOperatorInput
  parentId: IDQueryOperatorInput
  slug: StringQueryOperatorInput
  status: StringQueryOperatorInput
  template: WpContentTemplateFilterInput
  title: StringQueryOperatorInput
  uri: StringQueryOperatorInput
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnectionFilterInput
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdgeFilterInput
}

input WpPageFilterListInput {
  elemMatch: WpPageFilterInput
}

input WpPageSortInput {
  fields: [WpPageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpPageToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpPostFilterInput {
  author: WpNodeWithAuthorToUserConnectionEdgeFilterInput
  authorDatabaseId: IntQueryOperatorInput
  authorId: IDQueryOperatorInput
  categories: WpPostToCategoryConnectionFilterInput
  children: NodeFilterListInput
  commentCount: IntQueryOperatorInput
  commentStatus: StringQueryOperatorInput
  comments: WpPostToCommentConnectionFilterInput
  content: StringQueryOperatorInput
  contentType: WpContentNodeToContentTypeConnectionEdgeFilterInput
  databaseId: IntQueryOperatorInput
  date: DateQueryOperatorInput
  dateGmt: DateQueryOperatorInput
  desiredSlug: StringQueryOperatorInput
  enclosure: StringQueryOperatorInput
  excerpt: StringQueryOperatorInput
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdgeFilterInput
  featuredImageDatabaseId: IntQueryOperatorInput
  featuredImageId: IDQueryOperatorInput
  guid: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  isRevision: BooleanQueryOperatorInput
  isSticky: BooleanQueryOperatorInput
  lastEditedBy: WpContentNodeToEditLastConnectionEdgeFilterInput
  link: StringQueryOperatorInput
  modified: DateQueryOperatorInput
  modifiedGmt: DateQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  pingStatus: StringQueryOperatorInput
  pinged: StringQueryOperatorInput
  postFormats: WpPostToPostFormatConnectionFilterInput
  slug: StringQueryOperatorInput
  status: StringQueryOperatorInput
  tags: WpPostToTagConnectionFilterInput
  template: WpContentTemplateFilterInput
  terms: WpPostToTermNodeConnectionFilterInput
  title: StringQueryOperatorInput
  toPing: StringQueryOperatorInput
  uri: StringQueryOperatorInput
}

input WpPostFilterListInput {
  elemMatch: WpPostFilterInput
}

input WpPostFormatFilterInput {
  children: NodeFilterListInput
  contentNodes: WpPostFormatToContentNodeConnectionFilterInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  posts: WpPostFormatToPostConnectionFilterInput
  slug: StringQueryOperatorInput
  taxonomy: WpPostFormatToTaxonomyConnectionEdgeFilterInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
}

input WpPostFormatFilterListInput {
  elemMatch: WpPostFormatFilterInput
}

input WpPostFormatSortInput {
  fields: [WpPostFormatFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpPostFormatToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpPostFormatToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpPostFormatToTaxonomyConnectionEdgeFilterInput {
  node: WpTaxonomyFilterInput
}

input WpPostSortInput {
  fields: [WpPostFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpPostToCategoryConnectionFilterInput {
  nodes: WpCategoryFilterListInput
}

input WpPostToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpPostToPostFormatConnectionFilterInput {
  nodes: WpPostFormatFilterListInput
}

input WpPostToTagConnectionFilterInput {
  nodes: WpTagFilterListInput
}

input WpPostToTermNodeConnectionFilterInput {
  nodes: WpTermNodeFilterListInput
}

input WpPostTypeLabelDetailsFilterInput {
  addNew: StringQueryOperatorInput
  addNewItem: StringQueryOperatorInput
  allItems: StringQueryOperatorInput
  archives: StringQueryOperatorInput
  attributes: StringQueryOperatorInput
  editItem: StringQueryOperatorInput
  featuredImage: StringQueryOperatorInput
  filterItemsList: StringQueryOperatorInput
  insertIntoItem: StringQueryOperatorInput
  itemsList: StringQueryOperatorInput
  itemsListNavigation: StringQueryOperatorInput
  menuName: StringQueryOperatorInput
  name: StringQueryOperatorInput
  newItem: StringQueryOperatorInput
  notFound: StringQueryOperatorInput
  notFoundInTrash: StringQueryOperatorInput
  parentItemColon: StringQueryOperatorInput
  removeFeaturedImage: StringQueryOperatorInput
  searchItems: StringQueryOperatorInput
  setFeaturedImage: StringQueryOperatorInput
  singularName: StringQueryOperatorInput
  uploadedToThisItem: StringQueryOperatorInput
  useFeaturedImage: StringQueryOperatorInput
  viewItem: StringQueryOperatorInput
  viewItems: StringQueryOperatorInput
}

input WpReadingSettingsFilterInput {
  postsPerPage: IntQueryOperatorInput
}

input WpSettingsFilterInput {
  discussionSettingsDefaultCommentStatus: StringQueryOperatorInput
  discussionSettingsDefaultPingStatus: StringQueryOperatorInput
  generalSettingsDateFormat: StringQueryOperatorInput
  generalSettingsDescription: StringQueryOperatorInput
  generalSettingsEmail: StringQueryOperatorInput
  generalSettingsLanguage: StringQueryOperatorInput
  generalSettingsStartOfWeek: IntQueryOperatorInput
  generalSettingsTimeFormat: StringQueryOperatorInput
  generalSettingsTimezone: StringQueryOperatorInput
  generalSettingsTitle: StringQueryOperatorInput
  generalSettingsUrl: StringQueryOperatorInput
  readingSettingsPostsPerPage: IntQueryOperatorInput
  writingSettingsDefaultCategory: IntQueryOperatorInput
  writingSettingsDefaultPostFormat: StringQueryOperatorInput
  writingSettingsUseSmilies: BooleanQueryOperatorInput
}

input WpSortInput {
  fields: [WpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpTagFilterInput {
  children: NodeFilterListInput
  contentNodes: WpTagToContentNodeConnectionFilterInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  posts: WpTagToPostConnectionFilterInput
  slug: StringQueryOperatorInput
  taxonomy: WpTagToTaxonomyConnectionEdgeFilterInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
}

input WpTagFilterListInput {
  elemMatch: WpTagFilterInput
}

input WpTagSortInput {
  fields: [WpTagFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpTagToContentNodeConnectionFilterInput {
  nodes: WpContentNodeFilterListInput
}

input WpTagToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpTagToTaxonomyConnectionEdgeFilterInput {
  node: WpTaxonomyFilterInput
}

input WpTaxonomyFilterInput {
  archivePath: StringQueryOperatorInput
  children: NodeFilterListInput
  connectedContentTypes: WpTaxonomyToContentTypeConnectionFilterInput
  description: StringQueryOperatorInput
  graphqlPluralName: StringQueryOperatorInput
  graphqlSingleName: StringQueryOperatorInput
  hierarchical: BooleanQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  label: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  public: BooleanQueryOperatorInput
  restBase: StringQueryOperatorInput
  restControllerClass: StringQueryOperatorInput
  showCloud: BooleanQueryOperatorInput
  showInAdminColumn: BooleanQueryOperatorInput
  showInGraphql: BooleanQueryOperatorInput
  showInMenu: BooleanQueryOperatorInput
  showInNavMenus: BooleanQueryOperatorInput
  showInQuickEdit: BooleanQueryOperatorInput
  showInRest: BooleanQueryOperatorInput
  showUi: BooleanQueryOperatorInput
}

input WpTaxonomyFilterListInput {
  elemMatch: WpTaxonomyFilterInput
}

input WpTaxonomySortInput {
  fields: [WpTaxonomyFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpTaxonomyToContentTypeConnectionFilterInput {
  nodes: WpContentTypeFilterListInput
}

input WpTermNodeFilterInput {
  children: NodeFilterListInput
  count: IntQueryOperatorInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  link: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
  slug: StringQueryOperatorInput
  termGroupId: IntQueryOperatorInput
  termTaxonomyId: IntQueryOperatorInput
  uri: StringQueryOperatorInput
}

input WpTermNodeFilterListInput {
  elemMatch: WpTermNodeFilterInput
}

input WpTermNodeSortInput {
  fields: [WpTermNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpUserFilterInput {
  avatar: WpAvatarFilterInput
  capKey: StringQueryOperatorInput
  capabilities: StringQueryOperatorInput
  children: NodeFilterListInput
  comments: WpUserToCommentConnectionFilterInput
  databaseId: IntQueryOperatorInput
  description: StringQueryOperatorInput
  email: StringQueryOperatorInput
  extraCapabilities: StringQueryOperatorInput
  firstName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  lastName: StringQueryOperatorInput
  locale: StringQueryOperatorInput
  name: StringQueryOperatorInput
  nicename: StringQueryOperatorInput
  nickname: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  pages: WpUserToPageConnectionFilterInput
  parent: NodeFilterInput
  posts: WpUserToPostConnectionFilterInput
  registeredDate: StringQueryOperatorInput
  roles: WpUserToUserRoleConnectionFilterInput
  slug: StringQueryOperatorInput
  uri: StringQueryOperatorInput
  url: StringQueryOperatorInput
  username: StringQueryOperatorInput
}

input WpUserRoleFilterInput {
  capabilities: StringQueryOperatorInput
  children: NodeFilterListInput
  displayName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeType: StringQueryOperatorInput
  parent: NodeFilterInput
}

input WpUserRoleFilterListInput {
  elemMatch: WpUserRoleFilterInput
}

input WpUserRoleSortInput {
  fields: [WpUserRoleFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpUserSortInput {
  fields: [WpUserFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input WpUserToCommentConnectionFilterInput {
  nodes: WpCommentFilterListInput
}

input WpUserToPageConnectionFilterInput {
  nodes: WpPageFilterListInput
}

input WpUserToPostConnectionFilterInput {
  nodes: WpPostFilterListInput
}

input WpUserToUserRoleConnectionFilterInput {
  nodes: WpUserRoleFilterListInput
}

input WpWPGatsbyFilterInput {
  arePrettyPermalinksEnabled: BooleanQueryOperatorInput
  isPreviewFrontendOnline: BooleanQueryOperatorInput
}

input WpWritingSettingsFilterInput {
  defaultCategory: IntQueryOperatorInput
  defaultPostFormat: StringQueryOperatorInput
  useSmilies: BooleanQueryOperatorInput
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
